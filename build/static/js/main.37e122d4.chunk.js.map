{"version":3,"sources":["config/config.js","contracts/index.js","utils/utils.js","blockchainContexts/index.js","components/menu/scrollToTop.js","Service/http-common.js","store/reducers/errorReducer.js","validation/isEmpty.js","store/reducers/authReducer.js","store/reducers/userconReducer.js","store/reducers/chatlistReducer.js","store/reducers/gamelistReducer.js","store/reducers/userReducer.js","store/reducers/index.js","store/index.js","Service/action.js","components/components/header/loginTab.js","components/components/header/signUpTab.js","components/components/header/signpage.js","components/menu/header.js","components/menu/footer.js","components/menu/sidebar.js","components/components/SliderMain.js","components/components/FeatureBox.js","components/components/carousel/CarouselCollection.js","components/components/carousel/Catgor.js","components/components/dashboard.js","components/pages/home.js","components/pages/myPage/MyPage.js","components/pages/farm/Farm.js","components/pages/farm/FarmItem.js","components/pages/myPage/GameSubmit.js","components/pages/myPage/EditGame.js","components/pages/how/howto.js","components/pages/IframeBlock/IframeBlock.js","components/components/Error/PageNotFound.js","routes.js","app.js","index.js"],"names":["module","exports","BackendURI","providers","ethers","JsonRpcProvider","routerContract","Contract","Contrats","router","address","abi","atariContract","atari","treasuryContract","treasury","stakingPoolAbi","stakingPool","toBigNum","value","d","utils","parseUnits","Number","toFixed","fromBigNum","parseFloat","formatUnits","BlockchainContext","createContext","useBlockchainContext","useContext","reducer","state","type","payload","INIT_STATE","Provider","children","appDispatch","useDispatch","wallet","useWallet","useReducer","dispatch","useEffect","getSigner","a","status","provider","Web3Provider","ethereum","signer","checkBalance","balanceOf","account","balance","checkApproval","spenderAdddress","signedAtariContract","connect","allowance","deposit","amount","approve","tx","wait","signedTreasuryContract","success","NotificationManager","error","getStakingPoolInfo","poolAddress","getStakingContract","stakingAmountPromise","totalPromise","totalSupply","poolBalancePromise","symbolPromise","symbol","Promise","all","res","stakingAmount","total","poolBalance","message","err","stake","Error","signedStakingPool","errMsg","code","data","unStake","unstake","submitNewGame","gameData","signedRouter","create","sumEvent","events","pop","stakingPoolAddress","args","useMemo","ScrollToTop","useState","is_visible","setIs_visible","document","addEventListener","toggleVisibility","totop","getElementById","scrollCallBack","window","pageYOffset","classList","add","remove","removeEventListener","id","className","onClick","scrollTo","top","behavior","setAuthToken","token","axios","defaults","headers","common","initialState","isEmpty","undefined","Object","keys","length","trim","isAuthenticated","user","user_con","chatlist","gamelist","userSlice","createSlice","name","reducers","update","action","actions","combineReducers","auth","errors","usercon","userReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","baseURL","config","register","signData","post","decoded","jwt_decode","localStorage","getItem","removeItem","setItem","login","logData","getUserGamelist","games","approveToGame","approveAmount","getState","signMessage","signature","uploadDataSave","formData","updateGame","updateData","updateGameKey","key","setCurrentUser","updateUserData","playInfo","result","withdrawRequest","withdrawData","response","Action","logout","LoginTab","props","handlemodalclose","useSelector","msg","getSignature","loginData","console","log","Box","sx","py","Button","color","fullWidth","size","variant","CssTextField","withStyles","root","fontSize","borderBottomColor","width","borderColor","overflowWrap","TextField","SignUpTab","email","signstatus","initialValues","reg_username","reg_email","validationSchema","Yup","shape","max","required","onSubmit","e","handleBlur","handleChange","handleSubmit","touched","values","isValid","Boolean","helperText","label","margin","onBlur","onChange","autoComplete","AntTabs","borderBottom","indicator","height","backgroundColor","flexContainer","justifyContent","Tabs","AntTab","textTransform","minWidth","selected","Tab","disableRipple","HeaderModal","tabValue","isLog","setIsLog","isReg","setIsReg","setValue","Container","maxWidth","to","src","alt","event","newValue","Transition","React","forwardRef","ref","Slide","direction","Header","isShowModal","setIsShowModal","isTagVal","setIsTagVal","Dialog","open","TransitionComponent","keepMounted","onClose","footer","drawerWidth","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","DrawerHeader","display","alignItems","padding","spacing","mixins","toolbar","ResponsiveDrawer","useTheme","setOpen","handleDrawerClose","drawer","style","paddingLeft","List","ListItem","ListItemIcon","ListItemText","primary","CssBaseline","position","Toolbar","IconButton","edge","mr","Drawer","flexShrink","boxSizing","anchor","fadeInUp","keyframes","fadeIn","slidermain","delay","triggerOnce","featurebox","settings","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","dots","responsive","breakpoint","infinite","Responsive","isBalanceModalShow","setIsBalanceModalShow","gameItems","setGameItems","gbalance","setGbalance","setPoolAddress","setName","setPoolBalance","navigate","useNavigate","confirmBalance","allowanceAmount","allowances","find","gamePoolAddress","game","warning","showIframePad","innerWidth","jwtToken","onmessage","msg_data","querySelector","contentWindow","postMessage","filter","glist","approve_flag","map","list","index","game_img_src","slice","description","target","placeholder","Catgor","viewstyle","columns","title","dataIndex","render","tag","isCounting","end","Dashboard","allData","setAllData","products","setProducts","setInterval","i","bump","place","player","_id","profit","cashAmount","push","dataSource","Home","setViewStyle","FeatureBox","MyPage","depositAmount","setDepositAmount","withdrawAmount","setWithdrawAmount","loadingImg","setLoadingImg","withdrawLoadingImg","setWithdrawLoadingImg","depositErr","setDepositErr","withdrawErr","setWithdrawErr","states","handleConfirm","handleWithdraw","withDrawData","Grid","container","item","lg","md","xs","substring","fontWeight","min","setDeposit","disabled","setWithdraw","owner","sm","Farm","totalPoolBalance","setTotalPoolBalance","GameInfoList","info","EditFarm","routerParams","useParams","imageurl","setImageurl","stakeFlag","setStakFlag","loading","setLoading","setAmount","handleStake","handleUnStake","textAlign","GameSubmit","image","_setImage","selectedFile","setSeletedFile","setDescription","frontendurl","setFrontendurl","backendurl","setBackendurl","imgSelectStatus","setImgSelectStatus","loadingbtn","setLoadingbtn","loadingState","setLoadingState","nameInput","useRef","descriptionInput","frontendurlInput","backendurlInput","inputFileRef","createRef","cleanup","URL","revokeObjectURL","setImage","newImage","current","focus","gameOwner","feeRate","gameName","FormData","append","handleOnChange","files","reactImageSize","createObjectURL","accept","hidden","htmlFor","preventDefault","rows","minHeight","GameInfoListInput","setInfo","EditGame","gameImageUrl","gameKey","setGameKey","isDocuModalShow","setDocuModalShow","copied","setState","handleUpdate","handleGetKey","text","onCopy","useStyles","makeStyles","heading","flexBasis","secondaryHeading","img","maxHeight","modal","HowItem","imgURL","content","classes","expanded","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","ButtonBase","gutterBottom","Modal","Fade","in","Howto","setExpanded","expanded1","setExpanded1","expanded2","setExpanded2","panel","isExpanded","handleChange1","handleChange2","IframeBlock","fullscreen","useFullScreenHandle","frontUrl","setFrontUrl","setHeight","setResponsiveness","reportChange","useCallback","handle","handleClose","enter","createElement","PageNotFound","Router","currentTime","Date","now","exp","location","href","init","useRoutes","path","element","replace","GlobalStyles","createGlobalStyle","App","setTimeout","bgColor","spinnerColor","logoSrc","ReactDOM","chainId","connectors","portis","dAppId"],"mappings":"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","file":"static/js/main.37e122d4.chunk.js","sourcesContent":["module.exports = {\r\n    BackendURI: \"\",\r\n    // BackendURI: \"http://192.168.115.168:80\",\r\n};\r\n","import { ethers } from \"ethers\";\r\n\r\nimport Contrats from \"./contracts/26.json\";\r\n\r\nconst supportChainId = 26;\r\n\r\nconst RPCS = {\r\n    250: \"https://rpc.ftm.tools/\",\r\n    4002: \"https://rpc.testnet.fantom.network\",\r\n    26: \"https://rpc.icicb.com\",\r\n    1337: \"http://localhost:7545\",\r\n    31337: \"http://localhost:8545/\",\r\n};\r\n\r\nconst providers = {\r\n    // 1: new ethers.providers.JsonRpcProvider(RPCS[1]),\r\n    26: new ethers.providers.JsonRpcProvider(RPCS[26]),\r\n    // 250: new ethers.providers.JsonRpcProvider(RPCS[250]),\r\n    // 4002: new ethers.providers.JsonRpcProvider(RPCS[4002]),\r\n    // 1337: new ethers.providers.JsonRpcProvider(RPCS[1337]),\r\n    // 31337: new ethers.providers.JsonRpcProvider(RPCS[31337])\r\n};\r\n\r\n\r\nconst routerContract = new ethers.Contract(Contrats.router.address, Contrats.router.abi, providers[supportChainId]);\r\nconst atariContract = new ethers.Contract(Contrats.atari.address, Contrats.atari.abi, providers[supportChainId]);\r\n\r\nconst treasuryContract = new ethers.Contract(Contrats.treasury.address, Contrats.treasury.abi, providers[supportChainId]);\r\n\r\nconst stakingPoolAbi = Contrats.stakingPool.abi\r\n\r\nexport {\r\n    providers, routerContract, atariContract, treasuryContract, supportChainId, stakingPoolAbi\r\n}","import { ethers } from \"ethers\";\r\n\r\nimport { NotificationManager } from \"react-notifications\";\r\n/**\r\n * set delay for delayTimes\r\n * @param {Number} delayTimes - timePeriod for delay\r\n */\r\nfunction delay(delayTimes) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(2);\r\n        }, delayTimes);\r\n    });\r\n}\r\n\r\n/**\r\n * change data type from Number to BigNum\r\n * @param {Number} value - data that need to be change\r\n * @param {Number} d - decimals\r\n */\r\nfunction toBigNum(value, d) {\r\n    return ethers.utils.parseUnits(Number(value).toFixed(d), d);\r\n}\r\n\r\n/**\r\n * change data type from BigNum to Number\r\n * @param {Number} value - data that need to be change\r\n * @param {Number} d - decimals\r\n */\r\nfunction fromBigNum(value, d) {\r\n    return parseFloat(ethers.utils.formatUnits(value, d));\r\n}\r\n\r\n/**\r\n * @dev show  alert\r\n * @param {data}  error data\r\n */\r\nfunction handleAlert(data) {\r\n    const { title, msg } = data;\r\n    NotificationManager.success(title, msg, 3000);\r\n}\r\n\r\nexport { delay, handleAlert, toBigNum, fromBigNum };\r\n","/** @format */\r\n\r\nimport React, {\r\n    createContext,\r\n    useContext,\r\n    useReducer,\r\n    useMemo,\r\n    useEffect,\r\n} from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport {\r\n    providers,\r\n    routerContract,\r\n    atariContract,\r\n    treasuryContract,\r\n    supportChainId,\r\n    stakingPoolAbi,\r\n} from \"../contracts\";\r\nimport { toBigNum, fromBigNum } from \"../utils/utils\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nconst BlockchainContext = createContext();\r\n\r\nexport function useBlockchainContext() {\r\n    return useContext(BlockchainContext);\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n    return {\r\n        ...state,\r\n        [type]: payload,\r\n    };\r\n}\r\n\r\nconst INIT_STATE = {};\r\n\r\nexport default function Provider({ children }) {\r\n    const appDispatch = useDispatch();\r\n    const wallet = useWallet();\r\n    const [state, dispatch] = useReducer(reducer, INIT_STATE);\r\n\r\n    // set signer balance\r\n    useEffect(() => {\r\n        const getSigner = async () => {\r\n            if (wallet.status === \"connected\") {\r\n                const provider = new ethers.providers.Web3Provider(\r\n                    wallet.ethereum\r\n                );\r\n                const signer = await provider.getSigner();\r\n                dispatch({\r\n                    type: \"signer\",\r\n                    payload: signer,\r\n                });\r\n\r\n                dispatch({\r\n                    type: \"provider\",\r\n                    payload: provider,\r\n                });\r\n\r\n                checkBalance();\r\n                appDispatch({\r\n                    type: \"SET_SIGNER\",\r\n                    payload: signer,\r\n                });\r\n            }\r\n        };\r\n        getSigner();\r\n    }, [wallet.status]);\r\n\r\n    const checkBalance = async () => {\r\n        try {\r\n            if (wallet.status === \"connected\") {\r\n                const balance = await atariContract.balanceOf(wallet.account);\r\n                dispatch({\r\n                    type: \"balance\",\r\n                    payload: fromBigNum(balance, 0),\r\n                });\r\n                return fromBigNum(balance, 0);\r\n            } else {\r\n                return \"0\";\r\n            }\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    const checkApproval = async (spenderAdddress) => {\r\n        if (wallet.status === \"connected\") {\r\n            const signedAtariContract = atariContract.connect(state.signer);\r\n            const allowance = await signedAtariContract.allowance(\r\n                wallet.account,\r\n                spenderAdddress\r\n            );\r\n            return fromBigNum(allowance, 0);\r\n        } else {\r\n            return \"0\";\r\n        }\r\n    };\r\n\r\n    /*  ------------ deposit ------------- */\r\n    const deposit = async (amount) => {\r\n        try {\r\n            if (wallet.status === \"connected\") {\r\n                const balance = await checkBalance();\r\n                if (balance >= amount) {\r\n                    const allowance = await checkApproval(\r\n                        treasuryContract.address\r\n                    );\r\n\r\n                    if (allowance < amount) {\r\n                        const signedAtariContract = atariContract.connect(\r\n                            state.signer\r\n                        );\r\n                        var tx = await signedAtariContract.approve(\r\n                            treasuryContract.address,\r\n                            toBigNum(amount * 100, 0)\r\n                        );\r\n                        await tx.wait();\r\n                    }\r\n\r\n                    const signedTreasuryContract = treasuryContract.connect(\r\n                        state.signer\r\n                    );\r\n                    tx = await signedTreasuryContract.deposit(\r\n                        toBigNum(amount, 0)\r\n                    );\r\n                    await tx.wait();\r\n\r\n                    return { success: true };\r\n                } else {\r\n                    NotificationManager.error(\"Insufficent balance\", \"\", 3000);\r\n                    return { success: false };\r\n                }\r\n            }\r\n        } catch (err) {\r\n            NotificationManager.error(\"Deposit Failed\", \"\", 3000);\r\n            return { success: false };\r\n        }\r\n    };\r\n\r\n    /*  ------------ stake ------------- */\r\n\r\n    const getStakingPoolInfo = async (poolAddress) => {\r\n        if (wallet.status === \"connected\")\r\n            try {\r\n                const stakingPool = getStakingContract(poolAddress);\r\n\r\n                const stakingAmountPromise = stakingPool.balanceOf(\r\n                    wallet.account\r\n                );\r\n                const totalPromise = stakingPool.totalSupply();\r\n                const poolBalancePromise = atariContract.balanceOf(\r\n                    stakingPool.address\r\n                );\r\n                const symbolPromise = stakingPool.symbol();\r\n\r\n                var res = await Promise.all([\r\n                    stakingAmountPromise,\r\n                    totalPromise,\r\n                    poolBalancePromise,\r\n                    symbolPromise,\r\n                ]);\r\n                dispatch({\r\n                    type: [poolAddress],\r\n                    payload: {\r\n                        stakingAmount: Number(res[0]),\r\n                        total: Number(res[1]),\r\n                        poolBalance: Number(res[2]),\r\n                        symbol: res[3],\r\n                    },\r\n                });\r\n            } catch (err) {\r\n                NotificationManager.error(\r\n                    err.message ? err.message : \"stake error\",\r\n                    \"\",\r\n                    3000\r\n                );\r\n            }\r\n    };\r\n\r\n    const getStakingContract = (poolAddress) => {\r\n        try {\r\n            return new ethers.Contract(\r\n                poolAddress,\r\n                stakingPoolAbi,\r\n                providers[supportChainId]\r\n            );\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const stake = async (amount, poolAddress) => {\r\n        if (wallet.status === \"connected\")\r\n            try {\r\n                const stakingPool = getStakingContract(poolAddress);\r\n                if (Number(state.balance) < Number(amount))\r\n                    throw new Error(\"insufficent balance\");\r\n                const allowance = await checkApproval(stakingPool.address);\r\n\r\n                if (allowance < amount) {\r\n                    const signedAtariContract = atariContract.connect(\r\n                        state.signer\r\n                    );\r\n                    var tx = await signedAtariContract.approve(\r\n                        stakingPool.address,\r\n                        toBigNum(amount * 100, 0)\r\n                    );\r\n                    await tx.wait();\r\n                }\r\n                const signedStakingPool = stakingPool.connect(state.signer);\r\n                tx = await signedStakingPool.stake(toBigNum(amount, 0));\r\n                await tx.wait();\r\n                getStakingPoolInfo(poolAddress);\r\n                NotificationManager.success(\"stake success\");\r\n            } catch (err) {\r\n                var errMsg =\r\n                    err.code === -32603 ? err.data.message : err.message;\r\n                NotificationManager.error(\r\n                    errMsg ? errMsg : \"stake error\",\r\n                    \"\",\r\n                    3000\r\n                );\r\n            }\r\n        else {\r\n            NotificationManager.error(\"please connect wallet\", \"\", 3000);\r\n        }\r\n    };\r\n\r\n    const unStake = async (amount, poolAddress) => {\r\n        if (wallet.status === \"connected\")\r\n            try {\r\n                const stakingPool = getStakingContract(poolAddress);\r\n                const stakingAmount = await stakingPool.balanceOf(\r\n                    wallet.account\r\n                );\r\n                if (Number(stakingAmount) > Number(amount)) {\r\n                    const signedStakingPool = stakingPool.connect(state.signer);\r\n                    var tx = await signedStakingPool.unstake(\r\n                        toBigNum(amount, 0)\r\n                    );\r\n                    await tx.wait();\r\n                    getStakingPoolInfo(poolAddress);\r\n                    NotificationManager.success(\"Withdraw success\");\r\n                } else {\r\n                    NotificationManager.error(\"unStake : insufficent balance\");\r\n                }\r\n            } catch (err) {\r\n                NotificationManager.error(\r\n                    err.message ? err.message : \"stake error\",\r\n                    \"\",\r\n                    3000\r\n                );\r\n            }\r\n        else {\r\n            NotificationManager.error(\" please connect wallet\");\r\n        }\r\n    };\r\n\r\n    /* ------------- submit -------------- */\r\n\r\n    const submitNewGame = async (gameData) => {\r\n        if (wallet.status !== \"connected\")\r\n            throw new Error(\"Please Connect Wallet\");\r\n        const signedRouter = routerContract.connect(state.signer);\r\n        var tx = await signedRouter.create(gameData);\r\n        var res = await tx.wait();\r\n\r\n        let sumEvent = res.events.pop();\r\n        let stakingPoolAddress = sumEvent.args[0];\r\n        return stakingPoolAddress;\r\n    };\r\n\r\n    return (\r\n        <BlockchainContext.Provider\r\n            value={useMemo(\r\n                () => [\r\n                    state,\r\n                    {\r\n                        deposit,\r\n                        checkBalance,\r\n                        stake,\r\n                        unStake,\r\n                        submitNewGame,\r\n                        getStakingPoolInfo,\r\n                    },\r\n                ],\r\n                [state]\r\n            )}\r\n        >\r\n            {children}\r\n        </BlockchainContext.Provider>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\n\nexport default function ScrollToTop() {\n    const [is_visible, setIs_visible] = useState(false);\n\n    useEffect(() => {\n        document.addEventListener(\"scroll\", () => {\n            toggleVisibility();\n        });\n\n        const totop = document.getElementById(\"scroll-to-top\");\n        const scrollCallBack = window.addEventListener(\"scroll\", () => {\n            if (window.pageYOffset > 200) {\n                totop.classList.add(\"show\");\n            } else {\n                totop.classList.remove(\"show\");\n            }\n        });\n        return () => {\n            window.removeEventListener(\"scroll\", scrollCallBack);\n        };\n    }, []);\n\n    const toggleVisibility = () => {\n        if (window.pageYOffset > 200) {\n            setIs_visible(true);\n        } else {\n            setIs_visible(false);\n        }\n    };\n\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\",\n        });\n    };\n\n    return (\n        <div id=\"scroll-to-top\" className=\"init\">\n            {is_visible && (\n                <div onClick={scrollToTop}>\n                    <i className=\"\"></i>\n                </div>\n            )}\n        </div>\n    );\n}\n","import axios from \"axios\";\r\n\r\nexport default function setAuthToken(token) {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}\r\n","const initialState = {};\r\n\r\nexport default function errReduce(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"GET_ERRORS\":\r\n            return action.payload;\r\n        case \"CLEAR_ERRORS\":\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const isEmpty = (value) =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import isEmpty from \"../../validation/isEmpty\";\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n};\r\n\r\nexport default function authReduce(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_CURRENT_USER\":\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload,\r\n            };\r\n        case \"SET_SIGNER\":\r\n            return {\r\n                ...state,\r\n                signer: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n    user_con: 0,\r\n};\r\n\r\nexport default function userReduce(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"USER_CONNECTION\":\r\n            return {\r\n                ...state,\r\n                user_con: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n  chatlist: {},\r\n};\r\n\r\nexport default function chatlistReduce(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"CHAT_LIST\":\r\n      return {\r\n        chatlist: action.payload,\r\n      };\r\n    case \"GET_CHAT_LIST\":\r\n      return {\r\n        chatlist: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    gamelist: [],\r\n};\r\n\r\nexport default function authReduce(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_CURRENT_GAMELIST\":\r\n            return {\r\n                ...state,\r\n                gamelist: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport isEmpty from \"../../validation/isEmpty\";\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        isAuthenticated: false,\r\n    },\r\n    reducers: {\r\n        update: (state, action) => {\r\n            state.user = action.payload;\r\n            state.isAuthenticated = !isEmpty(action.payload);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { update } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport userconReducer from \"./userconReducer\";\r\nimport chatlistReducer from \"./chatlistReducer\";\r\nimport gamelistReducer from \"./gamelistReducer\";\r\n\r\nimport userReducer, { update as userUpdate } from \"./userReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n    usercon: userconReducer,\r\n    chatlist: chatlistReducer,\r\n    gamelist: gamelistReducer,\r\n    user: userReducer,\r\n});\r\n\r\nexport { userUpdate };\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n            compose\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import setAuthToken from \"./http-common\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport axios from \"axios\";\r\nimport config from \"../config/config\";\r\nimport store from \"../store\";\r\n\r\naxios.defaults.baseURL = config.BackendURI;\r\n\r\n// User Auth\r\nconst register = async (signData) => {\r\n    try {\r\n        var res = await axios.post(\"/api/users/register\", signData);\r\n\r\n        if (!res.data.status) {\r\n            NotificationManager.error(res.data.errors, \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        const decoded = jwt_decode(res.data.token);\r\n        if (!localStorage.getItem(\"jwtToken\", res.data.token))\r\n            localStorage.removeItem(\"jwtToken\");\r\n        localStorage.setItem(\"jwtToken\", res.data.token);\r\n\r\n        store.dispatch({\r\n            type: \"SET_CURRENT_USER\",\r\n            payload: decoded,\r\n        });\r\n\r\n        NotificationManager.success(\"WELCOME TO CASINO\", \"\", 3000);\r\n    } catch (err) {\r\n        NotificationManager.error(\"Community Error\", \"\", 3000);\r\n    }\r\n};\r\n\r\nconst login = async (logData) => {\r\n    try {\r\n        const res = await axios.post(\"/api/users/login\", logData);\r\n\r\n        if (!res.data.status) {\r\n            NotificationManager.error(res.data.errors, \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        const decoded = jwt_decode(res.data.token);\r\n\r\n        if (!localStorage.getItem(\"jwtToken\", res.data.token))\r\n            localStorage.removeItem(\"jwtToken\");\r\n        localStorage.setItem(\"jwtToken\", res.data.token);\r\n\r\n        setAuthToken(res.data.token);\r\n\r\n        store.dispatch({\r\n            type: \"SET_CURRENT_USER\",\r\n            payload: decoded,\r\n        });\r\n\r\n        NotificationManager.success(\"WELCOME TO CASINO\", \"\", 3000);\r\n    } catch (err) {\r\n        NotificationManager.error(\"Community Error\", \"\", 3000);\r\n    }\r\n};\r\n\r\nconst logout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requests\r\n\r\n    // Set current user to {} which will set isAuthenticated to false\r\n    setCurrentUser({});\r\n};\r\n\r\n// Game Manage\r\nconst getUserGamelist = async () => {\r\n    try {\r\n        var res = await axios.post(\"/api/games/getgamelist\");\r\n\r\n        if (res.data.status === false) {\r\n            NotificationManager.success(res.data.message, \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        store.dispatch({\r\n            type: \"SET_CURRENT_GAMELIST\",\r\n            payload: res.data.games,\r\n        });\r\n    } catch (err) {\r\n        NotificationManager.error(\"Community Error\", \"\", 3000);\r\n    }\r\n};\r\n\r\nconst approveToGame = async (approveAmount, poolAddress) => {\r\n    try {\r\n        // signature\r\n        var data = store.getState();\r\n        var signer = data.auth.signer;\r\n        const signature = await signer.signMessage(\r\n            \"approve \" + approveAmount + poolAddress\r\n        );\r\n\r\n        // request\r\n        var signData = {\r\n            approveAmount: approveAmount,\r\n            poolAddress: poolAddress,\r\n            signature: signature,\r\n        };\r\n\r\n        var res = await axios.post(\"/api/users/approve\", signData);\r\n\r\n        if (!res.data.status) {\r\n            NotificationManager.error(\"Server Error\", \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        const { token } = res.data;\r\n\r\n        const decoded = jwt_decode(token);\r\n\r\n        if (localStorage.getItem(\"jwtToken\", token))\r\n            localStorage.removeItem(\"jwtToken\");\r\n        localStorage.setItem(\"jwtToken\", token);\r\n\r\n        setAuthToken(token);\r\n\r\n        store.dispatch({\r\n            type: \"SET_CURRENT_USER\",\r\n            payload: decoded,\r\n        });\r\n\r\n        return true;\r\n    } catch (err) {\r\n        NotificationManager.error(\"Community Error\", \"\", 3000);\r\n        return;\r\n    }\r\n};\r\n\r\nconst uploadDataSave = async (formData) => {\r\n    try {\r\n        var res = await axios.post(\"/api/games/uploadfile\", formData);\r\n\r\n        if (!res.data.success) {\r\n            NotificationManager.error(\"Server Error\", \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        store.dispatch({\r\n            type: \"SET_CURRENT_GAMELIST\",\r\n            payload: res.data.games,\r\n        });\r\n    } catch (err) {\r\n        NotificationManager.error(\"Community Error\", \"\", 3000);\r\n    }\r\n};\r\n\r\nconst updateGame = async (updateData) => {\r\n    try {\r\n        var res = await axios.post(\"/api/games/updateGame\", updateData);\r\n\r\n        if (!res.data.status) {\r\n            NotificationManager.error(\"Server Error\", \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        store.dispatch({\r\n            type: \"SET_CURRENT_GAMELIST\",\r\n            payload: res.data.games,\r\n        });\r\n\r\n        NotificationManager.success(\"updateGame request success\", \"\", 3000);\r\n        return true;\r\n    } catch (err) {\r\n        NotificationManager.error(\"Community Error\", \"\", 3000);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst updateGameKey = async (updateData) => {\r\n    try {\r\n        var res = await axios.post(\"/api/games/updateApiKey\", updateData);\r\n        if (!res.data.status) {\r\n            NotificationManager.error(\"Server Error\", \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        const { key } = res.data;\r\n        return key;\r\n    } catch (err) {\r\n        NotificationManager.error(\"Community Error\", \"\", 3000);\r\n        return;\r\n    }\r\n};\r\n\r\n// User Manage\r\nconst setCurrentUser = (decoded) => {\r\n    store.dispatch({\r\n        type: \"SET_CURRENT_USER\",\r\n        payload: decoded,\r\n    });\r\n};\r\n\r\nconst updateUserData = async () => {\r\n    try {\r\n        if (!localStorage.getItem(\"jwtToken\")) return;\r\n        var res = await axios.post(\"/api/users/getUserData\");\r\n\r\n        if (!res.data.success) {\r\n            NotificationManager.error(\"Server Error\", \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        const { token } = res.data;\r\n        const decoded = jwt_decode(token);\r\n\r\n        if (!localStorage.getItem(\"jwtToken\"))\r\n            localStorage.removeItem(\"jwtToken\");\r\n        localStorage.setItem(\"jwtToken\", token);\r\n\r\n        setAuthToken(token);\r\n        setCurrentUser(decoded);\r\n    } catch (err) {\r\n        NotificationManager.error(\"Login Failed\", \"\", 3000);\r\n        localStorage.removeItem(\"jwtToken\");\r\n        setCurrentUser({});\r\n    }\r\n};\r\n\r\nconst playInfo = async () => {\r\n    try {\r\n        var res = await axios.post(\"/api/history/getPlayerInfos\");\r\n        if (!res.data.success) {\r\n            return false;\r\n        }\r\n        return res.data.result;\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n};\r\n\r\n// Token Withdraw\r\nconst withdrawRequest = async (withdrawData) => {\r\n    try {\r\n        var res = await axios.post(\r\n            \"/api/users/savewithdrawamount\",\r\n            withdrawData\r\n        );\r\n        if (!res.data.status) {\r\n            NotificationManager.error(\"Server Error\", \"\", 3000);\r\n            return;\r\n        }\r\n\r\n        const { token } = res.data;\r\n        const decoded = jwt_decode(token);\r\n\r\n        // Set token to ls\r\n        if (!localStorage.getItem(\"jwtToken\", token))\r\n            localStorage.removeItem(\"jwtToken\");\r\n        localStorage.setItem(\"jwtToken\", token);\r\n\r\n        setAuthToken(token);\r\n        setCurrentUser(decoded);\r\n\r\n        NotificationManager.success(\"Withdraw request success\", \"\", 3000);\r\n    } catch (err) {\r\n        NotificationManager.error(\r\n            err.response.data ? err.response.data : \"Withdraw request error\",\r\n            \"\",\r\n            3000\r\n        );\r\n    }\r\n};\r\n\r\n// Export Functions\r\nconst Action = {\r\n    // User Auth\r\n    register,\r\n    login,\r\n    logout,\r\n    setCurrentUser,\r\n    updateUserData,\r\n    playInfo,\r\n    // Game Manage\r\n    getUserGamelist,\r\n    approveToGame,\r\n    uploadDataSave,\r\n    updateGame,\r\n    updateGameKey,\r\n    // Token Manage\r\n    withdrawRequest,\r\n};\r\n\r\nexport default Action;\r\n","import React, { useEffect } from \"react\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { ethers } from \"ethers\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport Action from \"../../../Service/action\";\r\n\r\nimport \"./header.css\";\r\n\r\nexport default function LoginTab(props) {\r\n    const { handlemodalclose } = props;\r\n    const wallet = useWallet();\r\n    const user = useSelector((state) => state.auth);\r\n    const msg = \"Welcome to a ATARI casino\";\r\n\r\n    useEffect(() => {\r\n        if (user.isAuthenticated) {\r\n            handlemodalclose();\r\n        }\r\n    }, [user.isAuthenticated]);\r\n\r\n    useEffect(() => {\r\n        if (wallet.status === \"error\") {\r\n            NotificationManager.error(\r\n                \"please connect to correct chain\",\r\n                \"\",\r\n                3000\r\n            );\r\n        }\r\n    }, [wallet.status]);\r\n\r\n    const getSignature = async () => {\r\n        if (wallet.status === \"connected\") {\r\n            try {\r\n                const provider = new ethers.providers.Web3Provider(\r\n                    wallet.ethereum\r\n                );\r\n                const signer = await provider.getSigner();\r\n                const signature = await signer.signMessage(msg);\r\n\r\n                const loginData = {\r\n                    msg: msg,\r\n                    signature: signature,\r\n                };\r\n\r\n                Action.login(loginData);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ py: 2 }}>\r\n            {wallet.status === \"connected\" ? (\r\n                <Button\r\n                    className=\"login-enable-btn\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={() => getSignature()}\r\n                >\r\n                    sign in\r\n                </Button>\r\n            ) : (\r\n                <Button\r\n                    className=\"login-enable-btn\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={() => wallet.connect()}\r\n                >\r\n                    connect\r\n                </Button>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { Box, Button, TextField } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { ethers } from \"ethers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport Action from \"../../../Service/action\";\r\nimport \"./header.css\";\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        \"& label.Mui-focused\": {\r\n            color: \"var(--block_clr)\",\r\n            fontSize: \"15px !important\",\r\n        },\r\n        \"& .MuiInput-underline:after\": {\r\n            borderBottomColor: \"var(--block_clr)\",\r\n            fontSize: \"15px !important\",\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n            color: \"white\",\r\n            fontSize: \"15px !important\",\r\n        },\r\n        \"& .MuiFormHelperText-root\": {\r\n            fontSize: \"12px !important\",\r\n        },\r\n        \"& legend\": {\r\n            width: \"fit-content !important\",\r\n        },\r\n        \"& legend > span\": {\r\n            fontSize: \"10px !important\",\r\n        },\r\n        \"& .MuiOutlinedInput-root\": {\r\n            \"& fieldset\": {\r\n                borderColor: \"var(--menu_list_clr)\",\r\n                fontSize: \"15px !important\",\r\n            },\r\n            \"&:hover fieldset\": {\r\n                borderColor: \"var(--hover_clr)\",\r\n                fontSize: \"15px !important\",\r\n            },\r\n            \"&.Mui-focused fieldset\": {\r\n                borderColor: \"var(--block_clr)\",\r\n                fontSize: \"15px !important\",\r\n            },\r\n        },\r\n        \"& .MuiInputLabel-outlined\": {\r\n            color: \"var(--menu_list_clr)\",\r\n            fontSize: \"15px !important\",\r\n            overflowWrap: \"break-word\",\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nexport default function SignUpTab(props) {\r\n    const { handlemodalclose } = props;\r\n    const wallet = useWallet();\r\n    const user = useSelector((state) => state.auth);\r\n    const [signstatus, setSignstatus] = useState({\r\n        msg: \"Welcome to a ICICB casino\",\r\n        name: \"\",\r\n        email: \"\",\r\n        signature: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (user.isAuthenticated) {\r\n            handlemodalclose();\r\n        }\r\n    }, [user.isAuthenticated]);\r\n\r\n    useEffect(() => {\r\n        if (wallet.status === \"error\") {\r\n            NotificationManager.error(\r\n                \"please connect to correct chain\",\r\n                \"\",\r\n                3000\r\n            );\r\n        }\r\n    }, [wallet.status]);\r\n\r\n    const getSignature = async ({ msg, name, email }) => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n            const signer = await provider.getSigner();\r\n            const signature = await signer.signMessage(signstatus.msg);\r\n\r\n            Action.register({ signature, msg, name, email });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                reg_username: \"\",\r\n                reg_email: \"\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                reg_username: Yup.string()\r\n                    .max(255)\r\n                    .required(\"Useranme is required\"),\r\n                reg_email: Yup.string()\r\n                    .email(\"Must be a valid email\")\r\n                    .max(255)\r\n                    .required(\"Email is required\"),\r\n            })}\r\n            onSubmit={(e) => {\r\n                getSignature({\r\n                    msg: signstatus.msg,\r\n                    name: e.reg_username,\r\n                    email: e.reg_email,\r\n                });\r\n            }}\r\n        >\r\n            {({\r\n                errors,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n                touched,\r\n                values,\r\n                isValid,\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <CssTextField\r\n                        error={Boolean(\r\n                            touched.reg_username && errors.reg_username\r\n                        )}\r\n                        fullWidth\r\n                        helperText={touched.reg_username && errors.reg_username}\r\n                        label=\"Username\"\r\n                        margin=\"normal\"\r\n                        name=\"reg_username\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.reg_username}\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <CssTextField\r\n                        error={Boolean(touched.reg_email && errors.reg_email)}\r\n                        fullWidth\r\n                        helperText={touched.reg_email && errors.reg_email}\r\n                        label=\"Email Address\"\r\n                        margin=\"normal\"\r\n                        name=\"reg_email\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"email\"\r\n                        value={values.reg_email}\r\n                        variant=\"outlined\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <Box sx={{ py: 2 }}>\r\n                        {wallet.status === \"connected\" ? (\r\n                            <Button\r\n                                className={\r\n                                    !isValid\r\n                                        ? \"login-disable-btn\"\r\n                                        : \"login-enable-btn signup\"\r\n                                }\r\n                                color=\"primary\"\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                        ) : (\r\n                            <Button\r\n                                className=\"login-enable-btn signup\"\r\n                                color=\"primary\"\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"button\"\r\n                                variant=\"contained\"\r\n                                onClick={() => {\r\n                                    wallet.connect();\r\n                                }}\r\n                            >\r\n                                wallet connect\r\n                            </Button>\r\n                        )}\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Container, Tab, Tabs } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginTab from \"./loginTab\";\r\nimport SignUpTab from \"./signUpTab\";\r\nimport \"./header.css\";\r\n\r\nconst AntTabs = withStyles({\r\n    root: {\r\n        borderBottom: \"2px solid rgb(60, 63, 66)\",\r\n    },\r\n    indicator: {\r\n        height: \"2px\",\r\n        backgroundColor: \"var(--block_clr)\",\r\n    },\r\n    flexContainer: {\r\n        justifyContent: \"center\",\r\n    },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles({\r\n    root: {\r\n        textTransform: \"none\",\r\n        minWidth: \"50px\",\r\n        color: \"white!important\",\r\n        fontSize: \"15px !important\",\r\n        \"&:focus\": {\r\n            color: \"var(--block_clr)!important\",\r\n        },\r\n        \"&:hover\": {\r\n            color: \"var(--block_clr)!important\",\r\n        },\r\n    },\r\n    selected: {\r\n        color: \"var(--block_clr)!important\",\r\n    },\r\n})((props) => <Tab disableRipple {...props} />);\r\n\r\nexport default function HeaderModal(props) {\r\n    const { tabValue, handlemodalclose } = props;\r\n    const [isLog, setIsLog] = useState(true);\r\n    const [isReg, setIsReg] = useState(false);\r\n    const [value, setValue] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setValue(tabValue);\r\n    }, [tabValue]);\r\n\r\n    const handleTabs = (event, newValue) => {\r\n        if (newValue === 0) {\r\n            setValue(newValue);\r\n            setIsLog(true);\r\n            setIsReg(false);\r\n        } else {\r\n            setValue(newValue);\r\n            setIsLog(false);\r\n            setIsReg(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box className=\"signpagebox\">\r\n            <div\r\n                id=\"sign-dialog-close-btn\"\r\n                className=\"sign-dialog-close-btn\"\r\n                onClick={handlemodalclose}\r\n            >\r\n                <i className=\"fa fa-close\"></i>\r\n            </div>\r\n            <Container maxWidth=\"lg\" className=\"signpagecontainer\">\r\n                <div className=\"sign-logo\">\r\n                    <Link to=\"/\">\r\n                        <img src=\"assets/logo.png\" alt=\"logo\" />\r\n                    </Link>\r\n                </div>\r\n                <AntTabs\r\n                    value={value}\r\n                    onChange={handleTabs}\r\n                    aria-label=\"signpageTab\"\r\n                >\r\n                    <AntTab label=\"Log In\" />\r\n                    <AntTab label=\"Sign Up\" />\r\n                </AntTabs>\r\n                {value === 0 ? (\r\n                    <LoginTab handlemodalclose={handlemodalclose} />\r\n                ) : (\r\n                    <SignUpTab handlemodalclose={handlemodalclose} />\r\n                )}\r\n                {isLog ? (\r\n                    <div className=\"sign-reg-here\">\r\n                        Don't have an account?{\" \"}\r\n                        <span\r\n                            onClick={() => {\r\n                                setValue(1);\r\n                                setIsLog(false);\r\n                                setIsReg(true);\r\n                            }}\r\n                        >\r\n                            Register Here\r\n                        </span>\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n                {isReg ? (\r\n                    <div className=\"sign-reg-here\">\r\n                        Already have an account?{\" \"}\r\n                        <span\r\n                            onClick={() => {\r\n                                setValue(0);\r\n                                setIsLog(true);\r\n                                setIsReg(false);\r\n                            }}\r\n                        >\r\n                            Login here\r\n                        </span>\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Action from \"../../Service/action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Dialog, Slide } from \"@mui/material\";\r\n// import { useWallet } from \"use-wallet\";\r\nimport Signpage from \"../components/header/signpage\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Header() {\r\n    const [isShowModal, setIsShowModal] = useState(false);\r\n    const [isTagVal, setIsTagVal] = useState(0);\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n\r\n    const handlemodalclose = () => {\r\n        setIsShowModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header-user-sign\">\r\n                {auth.isAuthenticated ? (\r\n                    <>\r\n                        <span className=\"header-user-sign-in\">\r\n                            <Link to=\"/mypage\" className=\"link-btn\">\r\n                                Balance&nbsp;&nbsp;\r\n                                {Number(auth.user.balance).toFixed(0)}\r\n                            </Link>\r\n                        </span>\r\n                        <span className=\"header-user-sign-in\">\r\n                            <Link to=\"/mypage\" className=\"link-btn\">\r\n                                My Page\r\n                            </Link>\r\n                        </span>\r\n                        <span\r\n                            className=\"header-user-sign-in\"\r\n                            onClick={() => Action.logout()}\r\n                        >\r\n                            Log Out\r\n                        </span>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <span\r\n                            className=\"header-user-sign-in\"\r\n                            onClick={() => {\r\n                                setIsShowModal(true);\r\n                                setIsTagVal(0);\r\n                            }}\r\n                        >\r\n                            Log In\r\n                        </span>\r\n                        <span\r\n                            className=\"header-user-sign-up\"\r\n                            onClick={() => {\r\n                                setIsShowModal(true);\r\n                                setIsTagVal(1);\r\n                            }}\r\n                        >\r\n                            Sign Up\r\n                        </span>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Dialog\r\n                className=\"SignInDialog\"\r\n                open={isShowModal}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={() => handlemodalclose()}\r\n            >\r\n                <>\r\n                    <Signpage\r\n                        tabValue={isTagVal}\r\n                        handlemodalclose={handlemodalclose}\r\n                    />\r\n                </>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst footer = () => (\n    <footer className=\"footer-light\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-2 col-sm-12 col-xs-12\">\n                    <div className=\"widget\">\n                        <br />\n                        <br />\n                        <img\n                            src=\"./assets/atari_mark.png\"\n                            alt=\"\"\n                            width=\"100%\"\n                        />\n                    </div>\n                </div>\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"widget\">\n                        <ul>\n                            <li>\n                                <Link to=\"\">Privacy policy</Link>\n                            </li>\n                            <li>\n                                <Link to=\"\">Terms of use</Link>\n                            </li>\n                            <li>\n                                <Link to=\"\">Risk factors</Link>\n                            </li>\n                            <li>\n                                <Link to=\"\">Regulatory oversight</Link>\n                            </li>\n                            <li>\n                                <Link to=\"\">AML & CFT Policy</Link>\n                            </li>\n                            <li>\n                                <Link to=\"\">Cookie policy</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"col-md-3 col-sm-6 col-xs-12\">\n                    <div className=\"widget\">\n                        <ul className=\"s2\">\n                            <li>\n                                <Link to=\"\">Technical:</Link>\n                                <br />\n                                <Link to=\"\">tech@icicb.com</Link>\n                            </li>\n                            <li>\n                                <Link to=\"\">Marketing:</Link>\n                                <br />\n                                <Link to=\"\">marketing@icicb.com</Link>\n                            </li>\n                            <li>\n                                <Link to=\"\">Official website:</Link>\n                                <br />\n                                <Link to=\"\">www.icicb.com</Link>\n                            </li>\n                            <li>\n                                <Link to=\"\">Official Channel:</Link>\n                                <br />\n                                <Link to=\"\">t.me/icicbcoin</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"col-md-4 col-sm-12 col-xs-12\">\n                    <div className=\"widget\">\n                        <h5>Newsletter</h5>\n                        <p>\n                            Signup for our newsletter to get the latest news in\n                            your inbox.\n                        </p>\n                        <br />\n                        <div className=\"newLetterGroup\">\n                            <input type=\"text\" className=\"newletterinput\" />\n                            <button className=\"newlettersubmit\">Submit</button>\n                        </div>\n                        <br />\n                        <div className=\"spacer-10\"></div>\n                        <br />\n                        <br />\n                        <h5>Follow Us</h5>\n                        <div className=\"footerList\">\n                            <i className=\"social_facebook\"></i>\n                            <i className=\"social_twitter\"></i>\n                            <i className=\"social_pinterest\"></i>\n                            <i className=\"social_linkedin\"></i>\n                            <i className=\"social_instagram\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </footer>\n);\nexport default footer;\n","import * as React from \"react\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FormatListBulletedIcon from \"@mui/icons-material/FormatListBulleted\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport ManageAccountsIcon from \"@mui/icons-material/ManageAccounts\";\r\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\r\nimport ContactSupportIcon from \"@mui/icons-material/ContactSupport\";\r\n\r\nimport Header from \"./header\";\r\n\r\nimport Footer from \"./footer\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: `${drawerWidth}px`,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n}));\r\n\r\nfunction ResponsiveDrawer() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const drawer = (\r\n        <>\r\n            <div style={{ paddingLeft: \"15px\" }}>\r\n                <Link to=\"/\">\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" />\r\n                </Link>\r\n            </div>\r\n            <div style={{ padding: \"30px\" }} className=\"noselect\">\r\n                <List>\r\n                    <ListItem\r\n                        className=\"MenuButton\"\r\n                        onClick={handleDrawerClose}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <HomeIcon className=\"MenuIcon\" />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/\" className=\"MenuIcon\">\r\n                            <ListItemText primary=\"Home\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        className=\"MenuButton\"\r\n                        onClick={handleDrawerClose}\r\n                    >\r\n                        <ListItemIcon className=\"MenuIcon\">\r\n                            <ManageAccountsIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/mypage\" className=\"MenuIcon\">\r\n                            <ListItemText primary=\"My Page\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        className=\"MenuButton\"\r\n                        onClick={handleDrawerClose}\r\n                    >\r\n                        <ListItemIcon className=\"MenuIcon\">\r\n                            <AccountBalanceIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/farm\" className=\"MenuIcon\">\r\n                            <ListItemText primary=\"Farming\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem\r\n                        className=\"MenuButton\"\r\n                        onClick={handleDrawerClose}\r\n                    >\r\n                        <ListItemIcon className=\"MenuIcon\">\r\n                            <ContactSupportIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/howto\" className=\"MenuIcon\">\r\n                            <ListItemText primary=\"How to\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                </List>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ display: \"flex\" }}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    open={open}\r\n                    style={{ backgroundColor: \"rgba(164, 139, 87, 0.4)\" }}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            style={{ color: \"#a48b57\" }}\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            sx={{ mr: 2, ...(open && { display: \"none\" }) }}\r\n                        >\r\n                            <FormatListBulletedIcon />\r\n                        </IconButton>\r\n                        <Header />\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    sx={{\r\n                        width: drawerWidth,\r\n                        flexShrink: 0,\r\n                        \"& .MuiDrawer-paper\": {\r\n                            width: drawerWidth,\r\n                            boxSizing: \"border-box\",\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader></DrawerHeader>\r\n                    {drawer}\r\n                </Drawer>\r\n            </Box>\r\n            {/* Main Pages */}\r\n            <Outlet />\r\n\r\n            {/* Footer */}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import React from \"react\";\nimport Reveal from \"react-awesome-reveal\";\nimport { keyframes } from \"@emotion/react\";\nimport { Link } from \"react-router-dom\";\n\nconst fadeInUp = keyframes`\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    transform: translateY(40px);\n  }\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n`;\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport default function slidermain() {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-center\">\n                <div className=\"col-md-5\">\n                    <div className=\"spacer-single\"></div>\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={0}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <h6 className=\"\">\n                            <span className=\"text-uppercase h1 white\">\n                                ICICB Chain Casino\n                            </span>\n                        </h6>\n                    </Reveal>\n                    <div className=\"spacer-10\"></div>\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={300}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <h1 className=\"color\">Golden Chance</h1>\n                    </Reveal>\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={600}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <p className=\"lead grey\">\n                            The blockchain that will revolutionize the gambling{\" \"}\n                            industry\n                        </p>\n                    </Reveal>\n                    <div className=\"spacer-10\"></div>\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={1200}\n                        duration={1300}\n                        triggerOnce\n                    >\n                        {/* <span className=\"btn-main lead\">\n                        <Link to=\"\">Explore</Link>\n                    </span> */}\n                        <div className=\"mb-sm-30\"></div>\n                    </Reveal>\n                </div>\n                <div className=\"col-md-7 xs-hide\">\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeIn}\n                        delay={900}\n                        duration={1500}\n                        triggerOnce\n                    ></Reveal>\n                </div>\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n            {/* <div className=\"border-line\"></div> */}\n        </div>\n    );\n}\n","import React from \"react\";\nimport Reveal from \"react-awesome-reveal\";\nimport { keyframes } from \"@emotion/react\";\n\nconst fadeInUp = keyframes`\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    transform: translateY(40px);\n  }\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n`;\n\nconst featurebox = () => (\n    <div className=\"row noselect\">\n        <div className=\"col-lg-4 col-md-6 mb-3\">\n            <div className=\"feature-box f-boxed style-3\">\n                <Reveal\n                    className=\"onStep\"\n                    keyframes={fadeInUp}\n                    delay={0}\n                    duration={600}\n                    triggerOnce\n                >\n                    <img\n                        src=\"assets/3500_game.png\"\n                        alt=\"\"\n                        width={80}\n                        height={80}\n                    />\n                </Reveal>\n                <div className=\"text\">\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={100}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <br />\n                        <h4 className=\"subTitle\">Golden Games</h4>\n                    </Reveal>\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={200}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <p className=\"subContent\">\n                            Golden Game is EASY to play and easy to WIN BIG\n                            Reward! Golden Game will become your favorite game!\n                        </p>\n                    </Reveal>\n                </div>\n                <i className=\"wm icon_currency\"></i>\n            </div>\n        </div>\n\n        <div className=\"col-lg-4 col-md-6 mb-3\">\n            <div className=\"feature-box f-boxed style-3\">\n                <Reveal\n                    className=\"onStep\"\n                    keyframes={fadeInUp}\n                    delay={0}\n                    duration={600}\n                    triggerOnce\n                >\n                    <img\n                        src=\"assets/blockchain_game.png\"\n                        alt=\"\"\n                        width={80}\n                        height={80}\n                    />\n                </Reveal>\n                <div className=\"text\">\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={100}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <br />\n                        <h4 className=\"subTitle\">Full Blockchain Games</h4>\n                    </Reveal>\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={200}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <p className=\"subContent\">\n                            Full Blockchain have tokenized in-game assets\n                            allowing players to collect them as non-fungible\n                            tokens (NFTs).\n                        </p>\n                    </Reveal>\n                </div>\n                <i className=\"wm icon_link\"></i>\n            </div>\n        </div>\n\n        <div className=\"col-lg-4 col-md-6 mb-3\">\n            <div className=\"feature-box f-boxed style-3\">\n                <Reveal\n                    className=\"onStep\"\n                    keyframes={fadeInUp}\n                    delay={0}\n                    duration={600}\n                    triggerOnce\n                >\n                    <img\n                        src=\"assets/own_game.png\"\n                        alt=\"\"\n                        width={80}\n                        height={80}\n                    />\n                </Reveal>\n                <div className=\"text\">\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={100}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <br />\n                        <h4 className=\"subTitle\">Submit your own Game</h4>\n                    </Reveal>\n                    <Reveal\n                        className=\"onStep\"\n                        keyframes={fadeInUp}\n                        delay={200}\n                        duration={600}\n                        triggerOnce\n                    >\n                        <p className=\"subContent\">\n                            You can upload your own game. Play it with your\n                            friends.\n                        </p>\n                    </Reveal>\n                </div>\n                <i className=\"wm icon_cloud-upload_alt\"></i>\n            </div>\n        </div>\n    </div>\n);\nexport default featurebox;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Dialog, Slide } from \"@mui/material\";\r\nimport Slider from \"react-slick\";\r\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Action from \"../../../Service/action\";\r\nimport \"./gameitem.css\";\r\n\r\nconst settings = {\r\n    // speed: 1000,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 4,\r\n    autoplay: true,\r\n    autoplaySpeed: 7000,\r\n    dots: true,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1900,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 2,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 1600,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 2,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 1024,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 3,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 600,\r\n            settings: {\r\n                slidesToShow: 2,\r\n                slidesToScroll: 2,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 480,\r\n            settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1,\r\n                infinite: true,\r\n                dots: true,\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Responsive() {\r\n    const [isBalanceModalShow, setIsBalanceModalShow] = useState(false);\r\n    const [gameItems, setGameItems] = useState([]);\r\n    const [gbalance, setGbalance] = useState(0);\r\n    const [poolAddress, setPoolAddress] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [poolBalance, setPoolBalance] = useState(0);\r\n\r\n    const navigate = useNavigate();\r\n    const user = useSelector((state) => state.auth);\r\n    const games = useSelector((state) => state.gamelist);\r\n\r\n    useEffect(() => {\r\n        var gamelist = games.gamelist;\r\n        setGameItems(gamelist);\r\n    }, [games.gamelist]);\r\n\r\n    const confirmBalance = async (name, poolAddress) => {\r\n        if (user.isAuthenticated && localStorage.getItem(\"jwtToken\")) {\r\n            var allowanceAmount = 1000;\r\n            var poolBalance = 1000;\r\n            try {\r\n                var allowance = user.user.allowances.find(\r\n                    (allowance) => allowance.gamePoolAddress === poolAddress\r\n                );\r\n                allowanceAmount = allowance.amount;\r\n            } catch (err) {\r\n                console.log(\"no allowance data\");\r\n            }\r\n\r\n            try {\r\n                poolBalance = games.gamelist.find(\r\n                    (game) => game.poolAddress === poolAddress\r\n                ).poolBalance;\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n            setIsBalanceModalShow(true);\r\n            setName(name);\r\n            setPoolAddress(poolAddress);\r\n            setGbalance(allowanceAmount);\r\n            setPoolBalance(poolBalance);\r\n        } else {\r\n            NotificationManager.warning(\"Please Sign Up\", \"\", 3000);\r\n        }\r\n    };\r\n\r\n    const showIframePad = async (poolAddress) => {\r\n        if (window.innerWidth < 900) {\r\n            NotificationManager.error(\"Please Check Resolution\", \"\", 3000);\r\n            return;\r\n        }\r\n        if (gbalance <= user.user.balance && gbalance > 0) {\r\n            if (user.isAuthenticated && localStorage.jwtToken) {\r\n                let success = await Action.approveToGame(gbalance, poolAddress);\r\n\r\n                if (!success) return;\r\n                setIsBalanceModalShow(false);\r\n                navigate(`IframeBlock/${poolAddress}`);\r\n\r\n                var allowanceAmount = 1000;\r\n                try {\r\n                    var allowance = user.user.allowances.find(\r\n                        (allowance) => allowance.gamePoolAddress === poolAddress\r\n                    );\r\n                    allowanceAmount = allowance.amount;\r\n                } catch (err) {\r\n                    console.log(\"no allowance data\");\r\n                }\r\n\r\n                window.onmessage = (e) => {\r\n                    if (e.data.name === \"iframe_message\") {\r\n                        const msg_data = {\r\n                            poolAddress: poolAddress,\r\n                            name: \"iframe_message\",\r\n                            token: localStorage.getItem(\"jwtToken\"),\r\n                            allowanceAmount: gbalance,\r\n                        };\r\n                        document\r\n                            .querySelector(\"#gameIframe\")\r\n                            .contentWindow.postMessage(msg_data, \"*\");\r\n                    }\r\n                };\r\n            } else {\r\n                NotificationManager.warning(\"Please Sign Up\", \"\", 3000);\r\n            }\r\n        } else {\r\n            NotificationManager.error(\"Insufficient Balance!\", \"\", 3000);\r\n        }\r\n    };\r\n\r\n    const handlebalancemodalclose = () => {\r\n        setIsBalanceModalShow(false);\r\n        setPoolAddress(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nft\">\r\n                {gameItems.filter((glist) => {\r\n                    return glist.approve_flag === true;\r\n                }).length === 0 ? (\r\n                    <div className=\"text-center\" style={{ color: \"white\" }}>\r\n                        No Game Item\r\n                    </div>\r\n                ) : (\r\n                    <Slider {...settings}>\r\n                        {gameItems\r\n                            .filter((glist) => {\r\n                                return glist.approve_flag === true;\r\n                            })\r\n                            .map((list, index) => {\r\n                                return (\r\n                                    <div\r\n                                        key={index}\r\n                                        onClick={() =>\r\n                                            confirmBalance(\r\n                                                list.name,\r\n                                                list.poolAddress\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <div className=\"nft_coll\">\r\n                                            <div className=\"nft_wrap\">\r\n                                                <span>\r\n                                                    <img\r\n                                                        src={list.game_img_src}\r\n                                                        className=\"lazy img-fluid\"\r\n                                                        alt=\"\"\r\n                                                        style={{\r\n                                                            width: \"100%\",\r\n                                                        }}\r\n                                                    />\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"nft_coll_info\">\r\n                                                <div className=\"spacer-10\" />\r\n                                                <span>\r\n                                                    <h4>\r\n                                                        {list.name.length > 15\r\n                                                            ? list.name.slice(\r\n                                                                  0,\r\n                                                                  15\r\n                                                              ) + \"...\"\r\n                                                            : list.name}\r\n                                                    </h4>\r\n                                                </span>\r\n                                                <span>\r\n                                                    {list.description.length >\r\n                                                    20\r\n                                                        ? list.description.slice(\r\n                                                              0,\r\n                                                              20\r\n                                                          ) + \"...\"\r\n                                                        : list.name}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                    </Slider>\r\n                )}\r\n            </div>\r\n            <Dialog\r\n                className=\"BalanceDialog\"\r\n                open={isBalanceModalShow}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                maxWidth=\"xl\"\r\n            >\r\n                <div className=\"balance-modal-main\">\r\n                    <div className=\"balance-modal-title\">{name}</div>\r\n                    <div className=\"balance-input-block\">\r\n                        <span>Game PoolAddress:</span>\r\n                        <span>\r\n                            {!poolAddress\r\n                                ? \"\"\r\n                                : poolAddress.slice(0, 5) +\r\n                                  \"...\" +\r\n                                  poolAddress.slice(-5)}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"balance-input-block\">\r\n                        Amount:\r\n                        <input\r\n                            required\r\n                            className=\"balance-input\"\r\n                            type=\"number\"\r\n                            value={gbalance}\r\n                            onChange={(e) => {\r\n                                setGbalance(e.target.value);\r\n                            }}\r\n                            placeholder=\"Please input amount\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"balance-input-block\">\r\n                        <span>Allowance Amount:</span>\r\n                        <span style={{ color: \"var(--block_clr)\" }}>\r\n                            {gbalance} ICICB\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"balance-input-block\">\r\n                        <span>My Balance:</span>\r\n                        <span style={{ color: \"var(--block_clr)\" }}>\r\n                            {Number(user.user.balance).toFixed(0)} ICICB\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"balance-input-block\">\r\n                        <span>Game Amount:</span>\r\n                        <span style={{ color: \"var(--block_clr)\" }}>\r\n                            {Number(poolBalance).toFixed(0)} ICICB\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"balance-button-block\">\r\n                        <div\r\n                            className=\"balance-btn agree-btn\"\r\n                            onClick={() => showIframePad(poolAddress)}\r\n                        >\r\n                            Agree\r\n                        </div>\r\n                        <div\r\n                            className=\"balance-btn no-btn\"\r\n                            onClick={() => handlebalancemodalclose()}\r\n                        >\r\n                            No\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Dialog, Slide } from \"@mui/material\";\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\nimport Action from \"../../../Service/action\";\nimport \"./gameitem.css\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst Catgor = (props) => {\n    const { viewstyle } = props;\n    const [gameItems, setGameItems] = useState([]);\n    const [isBalanceModalShow, setIsBalanceModalShow] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [poolAddress, setPoolAddress] = useState(\"\");\n    const [gbalance, setGbalance] = useState(0);\n    const [poolBalance, setPoolBalance] = useState(0);\n\n    const navigate = useNavigate();\n    const user = useSelector((state) => state.auth);\n    const games = useSelector((state) => state.gamelist);\n\n    useEffect(() => {\n        var gamelist = games.gamelist;\n        setGameItems(gamelist);\n    }, [games.gamelist]);\n\n    const confirmBalance = async (name, poolAddress) => {\n        if (user.isAuthenticated && localStorage.getItem(\"jwtToken\")) {\n            var allowanceAmount = 1000;\n            var poolBalance = 1000;\n            try {\n                var allowance = user.user.allowances.find(\n                    (allowance) => allowance.gamePoolAddress === poolAddress\n                );\n                allowanceAmount = allowance.amount;\n            } catch (err) {\n                console.log(\"no allowance data\");\n            }\n\n            try {\n                poolBalance = games.gamelist.find(\n                    (game) => game.poolAddress === poolAddress\n                ).poolBalance;\n            } catch (err) {\n                console.log(err);\n            }\n\n            setIsBalanceModalShow(true);\n            setName(name);\n            setPoolAddress(poolAddress);\n            setGbalance(allowanceAmount);\n            setPoolBalance(poolBalance);\n        } else {\n            NotificationManager.warning(\"Please Sign Up\", \"\", 3000);\n        }\n    };\n\n    const showIframePad = async (poolAddress) => {\n        if (window.innerWidth < 900) {\n            NotificationManager.error(\"Please Check Resolution\", \"\", 3000);\n            return;\n        }\n        if (gbalance <= user.user.balance && gbalance > 0) {\n            if (user.isAuthenticated && localStorage.jwtToken) {\n                let success = await Action.approveToGame(gbalance, poolAddress);\n\n                if (!success) return;\n                setIsBalanceModalShow(false);\n                navigate(`IframeBlock/${poolAddress}`);\n\n                var allowanceAmount = 1000;\n                try {\n                    var allowance = user.user.allowances.find(\n                        (allowance) => allowance.gamePoolAddress === poolAddress\n                    );\n                    allowanceAmount = allowance.amount;\n                } catch (err) {\n                    console.log(\"no allowance data\");\n                }\n\n                window.onmessage = (e) => {\n                    if (e.data.name === \"iframe_message\") {\n                        const msg_data = {\n                            poolAddress: poolAddress,\n                            name: \"iframe_message\",\n                            token: localStorage.getItem(\"jwtToken\"),\n                            allowanceAmount: gbalance,\n                        };\n                        document\n                            .querySelector(\"#gameIframe\")\n                            .contentWindow.postMessage(msg_data, \"*\");\n                    }\n                };\n            } else {\n                NotificationManager.warning(\"Please Sign Up\", \"\", 3000);\n            }\n        } else {\n            NotificationManager.error(\"Insufficient Balance!\", \"\", 3000);\n        }\n    };\n\n    const handlebalancemodalclose = () => {\n        setIsBalanceModalShow(false);\n        setPoolAddress(\"\");\n    };\n\n    return (\n        <>\n            <div className=\"row\">\n                {gameItems.filter((glist) => {\n                    return glist.approve_flag === true;\n                }).length === 0 ? (\n                    <div className=\"text-center\" style={{ color: \"white\" }}>\n                        No Game Item\n                    </div>\n                ) : (\n                    gameItems\n                        .filter((glist) => {\n                            return glist.approve_flag === true;\n                        })\n                        .map((list, index) => {\n                            return index < 9 ? (\n                                <div\n                                    className=\"col-md-4 col-sm-4 col-6 mb-4\"\n                                    key={index}\n                                    onClick={() =>\n                                        confirmBalance(\n                                            list.name,\n                                            list.poolAddress\n                                        )\n                                    }\n                                >\n                                    <Link\n                                        className=\"icon-box style-2 rounded\"\n                                        to=\"\"\n                                    >\n                                        <img\n                                            src={list.game_img_src}\n                                            alt=\"\"\n                                            style={{ width: \"90%\" }}\n                                            className=\"gameItem\"\n                                        />\n                                        <span>{list.name}</span>\n                                    </Link>\n                                </div>\n                            ) : (\n                                <div\n                                    className=\"col-md-4 col-sm-4 col-6 mb-4\"\n                                    style={viewstyle}\n                                    key={index}\n                                    onClick={() =>\n                                        confirmBalance(\n                                            list.name,\n                                            list.poolAddress\n                                        )\n                                    }\n                                >\n                                    <Link\n                                        className=\"icon-box style-2 rounded\"\n                                        to=\"\"\n                                    >\n                                        <img\n                                            src={list.game_img_src}\n                                            alt=\"\"\n                                            className=\"gameItem\"\n                                        />\n                                        <span>{list.name}</span>\n                                    </Link>\n                                </div>\n                            );\n                        })\n                )}\n            </div>\n            <Dialog\n                className=\"BalanceDialog\"\n                open={isBalanceModalShow}\n                TransitionComponent={Transition}\n                keepMounted\n                maxWidth=\"xl\"\n            >\n                <div className=\"balance-modal-main\">\n                    <div className=\"balance-modal-title\">{name}</div>\n                    <div className=\"balance-input-block\">\n                        <span>Game PoolAddress:</span>\n                        <span>\n                            {!poolAddress\n                                ? \"\"\n                                : poolAddress.slice(0, 5) +\n                                  \"...\" +\n                                  poolAddress.slice(-5)}\n                        </span>\n                    </div>\n                    <div className=\"balance-input-block\">\n                        Amount:\n                        <input\n                            required\n                            className=\"balance-input\"\n                            type=\"number\"\n                            value={gbalance}\n                            onChange={(e) => {\n                                setGbalance(e.target.value);\n                            }}\n                            placeholder=\"Please input amount\"\n                        />\n                    </div>\n                    <div className=\"balance-input-block\">\n                        <span>Allowance Amount:</span>\n                        <span style={{ color: \"var(--block_clr)\" }}>\n                            {gbalance} ICICB\n                        </span>\n                    </div>\n                    <div className=\"balance-input-block\">\n                        <span>My Balance:</span>\n                        <span style={{ color: \"var(--block_clr)\" }}>\n                            {Number(user.user.balance).toFixed(0)} ICICB\n                        </span>\n                    </div>\n                    <div className=\"balance-input-block\">\n                        <span>Game Amount:</span>\n                        <span style={{ color: \"var(--block_clr)\" }}>\n                            {Number(poolBalance).toFixed(0)} ICICB\n                        </span>\n                    </div>\n                    <div className=\"balance-button-block\">\n                        <div\n                            className=\"balance-btn agree-btn\"\n                            onClick={() => showIframePad(poolAddress)}\n                        >\n                            Agree\n                        </div>\n                        <div\n                            className=\"balance-btn no-btn\"\n                            onClick={() => handlebalancemodalclose()}\n                        >\n                            No\n                        </div>\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n};\nexport default Catgor;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag } from \"antd\";\r\nimport { CountUp } from \"use-count-up\";\r\nimport Action from \"../../Service/action\";\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Place\",\r\n        dataIndex: \"place\",\r\n        key: \"place\",\r\n    },\r\n    {\r\n        title: \"Player\",\r\n        dataIndex: \"player\",\r\n        key: \"player\",\r\n    },\r\n    {\r\n        title: \"Profit(ICICB)\",\r\n        dataIndex: \"profit\",\r\n        key: \"profit\",\r\n        render: (tag) => {\r\n            let color = \"green\";\r\n            return (\r\n                <Tag color={color}>\r\n                    +<CountUp isCounting end={Number(tag)} duration={1.5} />\r\n                </Tag>\r\n            );\r\n        },\r\n    },\r\n];\r\n\r\nexport default function Dashboard() {\r\n    const [allData, setAllData] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setInterval(async () => {\r\n            var result = await Action.playInfo();\r\n            if (result) {\r\n                setAllData(result);\r\n            }\r\n        }, 2000);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        var data = [];\r\n        for (var i = 0; i < allData.length; i++) {\r\n            var bump = {\r\n                place: i + 1,\r\n                player: allData[i]._id.name,\r\n                profit: Number(allData[i].cashAmount).toFixed(0),\r\n            };\r\n            data.push(bump);\r\n        }\r\n        setProducts(data);\r\n    }, [allData]);\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <Table columns={columns} dataSource={products} />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport SliderMain from \"../components/SliderMain\";\r\nimport FeatureBox from \"../components/FeatureBox\";\r\nimport CarouselCollection from \"../components/carousel/CarouselCollection\";\r\nimport Catgor from \"../components/carousel/Catgor\";\r\n\r\nimport DashboardTable from \"../components/dashboard\";\r\nimport Partner from \"../components/partner\";\r\n\r\nconst Home = () => {\r\n    const [viewstyle, setViewStyle] = useState({ display: \"none\" });\r\n\r\n    const allview = () => {\r\n        setViewStyle({ display: \"inline-block\" });\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <section className=\"jumbotron breadcumb no-bg h-vh\">\r\n                <SliderMain />\r\n            </section>\r\n\r\n            <div\r\n                data-aos=\"zoom-in\"\r\n                data-aos-anchor-placement=\"top-center\"\r\n                data-aos-once={true}\r\n            >\r\n                <section className=\"container no-top no-bottom\">\r\n                    <FeatureBox />\r\n                </section>\r\n            </div>\r\n\r\n            <div\r\n                data-aos=\"fade-up\"\r\n                data-aos-anchor-placement=\"top-center\"\r\n                data-aos-once={true}\r\n            >\r\n                <section className=\"container no-bottom\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <CarouselCollection />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <div className=\"spacer-double\"></div>\r\n            <div className=\"spacer-double\"></div>\r\n\r\n            <div\r\n                data-aos=\"fade-left\"\r\n                data-aos-anchor-placement=\"top-center\"\r\n                data-aos-once={true}\r\n            >\r\n                <section className=\"container\">\r\n                    <img\r\n                        src=\"./assets/jackpot_back_img.png\"\r\n                        alt=\"\"\r\n                        className=\"jackpotBack\"\r\n                    />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-5\">\r\n                            <h6 className=\"\">\r\n                                <span className=\"h1 white\">ICICB Games</span>\r\n                            </h6>\r\n                            <h1 className=\"text-uppercase color\">Play Now</h1>\r\n                            <img\r\n                                src=\"/assets/jackpot.png\"\r\n                                alt=\"\"\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                            <div className=\"spacer-10\" />\r\n                            <span\r\n                                className=\"btn-main lead\"\r\n                                onClick={() => allview()}\r\n                            >\r\n                                <span>All Games</span>&nbsp;&nbsp;\r\n                                <i className=\"arrow_right_alt\" />\r\n                            </span>\r\n                            <div className=\"spacer-20\" />\r\n                        </div>\r\n                        <div className=\"col-lg-7\">\r\n                            <Catgor viewstyle={viewstyle} />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <div\r\n                data-aos=\"fade-right\"\r\n                data-aos-anchor-placement=\"top-center\"\r\n                data-aos-once={true}\r\n            >\r\n                <section className=\"container no-bottom\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-md-6\">\r\n                            <h6 className=\"\">\r\n                                <span className=\"text-uppercase h1 white\">\r\n                                    ICICB Token\r\n                                </span>\r\n                            </h6>\r\n                            <h1 className=\"color\">Powerful Token</h1>\r\n                            <p className=\"grey\">\r\n                                We are building the token that will power the\r\n                                future of the interactive entertainment industry\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <img\r\n                                src=\"./assets/atari_mark_image.png\"\r\n                                alt=\"\"\r\n                                style={{ width: \"100%\" }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <section className=\"container no-bottom\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"text-center\">\r\n                            <div\r\n                                data-aos=\"fade-down\"\r\n                                data-aos-anchor-placement=\"top-center\"\r\n                                data-aos-once={true}\r\n                            >\r\n                                <h2 className=\"white\">Dashboard</h2>\r\n                                <div className=\"small-border\"></div>\r\n                                <DashboardTable />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* <Partner /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ethers } from \"ethers\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nimport { useBlockchainContext } from \"../../../blockchainContexts\";\r\nimport Action from \"../../../Service/action\";\r\nimport Partner from \"../../components/partner\";\r\n\r\nimport \"./mypage.css\";\r\n\r\nexport default function MyPage() {\r\n    const wallet = useWallet();\r\n    const [state, { deposit, checkBalance }] = useBlockchainContext();\r\n    const [gameItems, setGameItems] = useState([]);\r\n    const [depositAmount, setDepositAmount] = useState(0);\r\n    const [withdrawAmount, setWithdrawAmount] = useState(0);\r\n    const [loadingImg, setLoadingImg] = useState(false);\r\n    const [withdrawLoadingImg, setWithdrawLoadingImg] = useState(false);\r\n    const [depositErr, setDepositErr] = useState(false);\r\n    const [withdrawErr, setWithdrawErr] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector((states) => states.auth);\r\n    const games = useSelector((states) => states.gamelist);\r\n\r\n    useEffect(() => {\r\n        if (!user.isAuthenticated || wallet.status !== \"connected\") {\r\n            navigate(\"/\");\r\n            NotificationManager.error(\"Please Log In\", \"\", 3000);\r\n            Action.logout();\r\n        }\r\n    }, [user.isAuthenticated]);\r\n\r\n    useEffect(() => {\r\n        Action.updateUserData();\r\n        setGameItems(games.gamelist);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        checkBalance();\r\n    }, [wallet.status]);\r\n\r\n    useEffect(() => {\r\n        if (!state.balance || depositAmount > state.balance)\r\n            setDepositErr(true);\r\n        else setDepositErr(false);\r\n    }, [depositAmount, state.balance]);\r\n\r\n    useEffect(() => {\r\n        if (!user.user.balance || withdrawAmount > user.user.balance)\r\n            setWithdrawErr(true);\r\n        else setWithdrawErr(false);\r\n    }, [withdrawAmount, user.user.balance]);\r\n\r\n    const setDeposit = (e) => {\r\n        if (e.target.value < 0) {\r\n            setDepositAmount(0);\r\n        } else {\r\n            setDepositAmount(e.target.value);\r\n        }\r\n    };\r\n\r\n    const setWithdraw = (e) => {\r\n        if (e.target.value < 0) {\r\n            setWithdrawAmount(0);\r\n        } else {\r\n            setWithdrawAmount(e.target.value);\r\n        }\r\n    };\r\n\r\n    const handleConfirm = async () => {\r\n        if (depositAmount <= 0) {\r\n            NotificationManager.error(\"Please Input Amount.\", \"\", 2000);\r\n        } else {\r\n            if (wallet.status === \"connected\") {\r\n                try {\r\n                    setLoadingImg(true);\r\n                    const depositResult = await deposit(depositAmount);\r\n                    if (!depositResult.success) {\r\n                        await setLoadingImg(false);\r\n                        return;\r\n                    }\r\n                    await setLoadingImg(false);\r\n                    await setDepositAmount(0);\r\n\r\n                    dispatch({\r\n                        type: \"SET_CURRENT_USER\",\r\n                        payload: {\r\n                            ...user.user,\r\n                            balance:\r\n                                Number(user.user.balance) +\r\n                                Number(depositAmount),\r\n                        },\r\n                    });\r\n                } catch (err) {\r\n                    NotificationManager.error(\"Deposit Failed!\", \"\", 3000);\r\n                    setLoadingImg(false);\r\n                }\r\n            } else {\r\n                wallet.connect();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleWithdraw = async () => {\r\n        if (withdrawAmount <= 0) {\r\n            NotificationManager.error(\"Please Input Amount.\", \"\", 2000);\r\n        } else {\r\n            if (wallet.status !== \"connected\") {\r\n                NotificationManager.error(\"Please connect wallet!\", \"\", 3000);\r\n                return;\r\n            }\r\n            try {\r\n                setWithdrawLoadingImg(true);\r\n                const provider = new ethers.providers.Web3Provider(\r\n                    wallet.ethereum\r\n                );\r\n                const signer = await provider.getSigner();\r\n                const signature = await signer.signMessage(\r\n                    \"withdraw \" + withdrawAmount\r\n                );\r\n\r\n                const withDrawData = {\r\n                    withdrawAmount: withdrawAmount,\r\n                    signature: signature,\r\n                };\r\n                await Action.withdrawRequest(withDrawData);\r\n                setWithdrawLoadingImg(false);\r\n            } catch (err) {\r\n                NotificationManager.error(\"Withdraw Failed!\", \"\", 3000);\r\n                setWithdrawLoadingImg(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mypage\">\r\n            <div className=\"container\">\r\n                <div\r\n                    data-aos=\"zoom-out\"\r\n                    data-aos-anchor-placement=\"top-center\"\r\n                    data-aos-once={true}\r\n                >\r\n                    <div className=\"mygame-title t-font text-center\">\r\n                        My Account\r\n                    </div>\r\n                    <Grid container className=\"card-group\">\r\n                        <Grid\r\n                            item\r\n                            lg={3.7}\r\n                            md={5}\r\n                            xs={11}\r\n                            className=\"card-block text-center\"\r\n                        >\r\n                            <div className=\"card-title t-font\">\r\n                                MY INFORMATION\r\n                            </div>\r\n                            <div className=\"card-main\">\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    className=\"card-main-item\"\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={5}\r\n                                        xs={6}\r\n                                        className=\"card-main-label\"\r\n                                    >\r\n                                        Name:\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={7}\r\n                                        xs={6}\r\n                                        className=\"card-main-content\"\r\n                                    >\r\n                                        {user.user.name}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    className=\"card-main-item\"\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={5}\r\n                                        xs={6}\r\n                                        className=\"card-main-label\"\r\n                                    >\r\n                                        Email:\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={7}\r\n                                        xs={6}\r\n                                        className=\"card-main-content\"\r\n                                    >\r\n                                        {user.user.email}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    className=\"card-main-item\"\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={5}\r\n                                        xs={6}\r\n                                        className=\"card-main-label\"\r\n                                    >\r\n                                        Account:\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={7}\r\n                                        xs={6}\r\n                                        className=\"card-main-content\"\r\n                                    >\r\n                                        {user.isAuthenticated && user.user\r\n                                            ? user.user.account.substring(\r\n                                                  0,\r\n                                                  6\r\n                                              ) +\r\n                                              \"...\" +\r\n                                              user.user.account.substring(\r\n                                                  user.user.account.length - 4\r\n                                              )\r\n                                            : \"\"}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    className=\"card-main-item\"\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={5}\r\n                                        xs={6}\r\n                                        className=\"card-main-label\"\r\n                                    >\r\n                                        Balance:\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={7}\r\n                                        xs={6}\r\n                                        className=\"card-main-content\"\r\n                                    >\r\n                                        <span>\r\n                                            <span\r\n                                                style={{\r\n                                                    color: \"var(--block_clr)\",\r\n                                                    fontWeight: \"bold\",\r\n                                                }}\r\n                                            >\r\n                                                {Number(\r\n                                                    user.user.balance\r\n                                                ).toFixed(0)}\r\n                                            </span>{\" \"}\r\n                                            ICICB\r\n                                        </span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            lg={3.7}\r\n                            md={5}\r\n                            xs={11}\r\n                            className=\"card-block text-center\"\r\n                        >\r\n                            <div className=\"card-title t-font\">DEPOSIT</div>\r\n                            <div className=\"card-main\">\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    className=\"card-main-item\"\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={5.5}\r\n                                        xs={5.9}\r\n                                        className=\"card-main-label\"\r\n                                    >\r\n                                        Deposit Amount:\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={6.5}\r\n                                        xs={5.9}\r\n                                        className=\"card-main-content\"\r\n                                    >\r\n                                        <div className=\"card-main-content card-input-block\">\r\n                                            <span>ICICB</span>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"card-amount-input\"\r\n                                                min={0}\r\n                                                value={depositAmount}\r\n                                                onChange={(e) => {\r\n                                                    setDeposit(e);\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    className=\"card-main-item\"\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={5}\r\n                                        xs={6}\r\n                                        className=\"card-main-label\"\r\n                                    >\r\n                                        Total:\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={7}\r\n                                        xs={6}\r\n                                        className=\"card-main-content\"\r\n                                    >\r\n                                        {Number(depositAmount).toFixed(0)} ICICB\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br />\r\n                                <br />\r\n                                <div\r\n                                    className=\"card-btn text-center t-font\"\r\n                                    onClick={handleConfirm}\r\n                                    disabled={depositErr}\r\n                                >\r\n                                    {wallet.status !== \"connected\" ? (\r\n                                        \"Wallet Connect\"\r\n                                    ) : loadingImg ? (\r\n                                        <img\r\n                                            src=\"assets/box.gif\"\r\n                                            alt=\"loadimage\"\r\n                                        />\r\n                                    ) : depositErr ? (\r\n                                        \"Insufficient Balance\"\r\n                                    ) : (\r\n                                        \"Confirm  \" +\r\n                                        Number(depositAmount).toFixed(0) +\r\n                                        \" ICICB\"\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            lg={3.7}\r\n                            md={5}\r\n                            xs={11}\r\n                            className=\"card-block text-center\"\r\n                        >\r\n                            <div className=\"card-title t-font\">Withdraw</div>\r\n                            <div className=\"card-main\">\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    className=\"card-main-item\"\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={5.5}\r\n                                        xs={6}\r\n                                        className=\"card-main-label\"\r\n                                    >\r\n                                        Withdraw Amount:\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={6.5}\r\n                                        xs={6}\r\n                                        className=\"card-main-content\"\r\n                                    >\r\n                                        <div className=\"card-main-content card-input-block\">\r\n                                            <span>ICICB</span>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"card-amount-input\"\r\n                                                min={0}\r\n                                                value={withdrawAmount}\r\n                                                onChange={(e) => {\r\n                                                    setWithdraw(e);\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    className=\"card-main-item\"\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={5}\r\n                                        xs={6}\r\n                                        className=\"card-main-label\"\r\n                                    >\r\n                                        Balance:\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={7}\r\n                                        xs={6}\r\n                                        className=\"card-main-content\"\r\n                                    >\r\n                                        {Number(user.user.balance).toFixed(0)}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br />\r\n                                <br />\r\n                                <div\r\n                                    className=\"card-btn text-center\"\r\n                                    onClick={handleWithdraw}\r\n                                    disabled={withdrawErr}\r\n                                >\r\n                                    {wallet.status !== \"connected\" ? (\r\n                                        \"Wallet Connect\"\r\n                                    ) : withdrawLoadingImg ? (\r\n                                        <img\r\n                                            src=\"assets/box.gif\"\r\n                                            alt=\"loadimage\"\r\n                                        />\r\n                                    ) : withdrawErr ? (\r\n                                        \"Insufficient Balance\"\r\n                                    ) : (\r\n                                        \"Withdraw  \" +\r\n                                        Number(withdrawAmount).toFixed(0) +\r\n                                        \" ICICB\"\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div className=\"gameadd\">\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"submit-btn text-center\">\r\n                            <Link className=\"link-btn\" to=\"/upload-game\">\r\n                                <button>Submit</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"spacer-10\" />\r\n                <div className=\"spacer-double\" />\r\n\r\n                <div\r\n                    data-aos=\"fade-left\"\r\n                    data-aos-anchor-placement=\"top-center\"\r\n                    data-aos-once={true}\r\n                >\r\n                    <div className=\"t-font text-center\">My Games</div>\r\n                    <div className=\"spacer-double\"></div>\r\n                    <Grid\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        className=\"mygame-list text-center\"\r\n                    >\r\n                        {gameItems.filter((glist) => {\r\n                            return glist.owner === user.user.account;\r\n                        }).length > 0 ? (\r\n                            gameItems\r\n                                .filter((glist) => {\r\n                                    return glist.owner === user.user.account;\r\n                                })\r\n                                .map((list, index) => (\r\n                                    <Grid\r\n                                        item\r\n                                        key={index}\r\n                                        className=\"mygame-list-item\"\r\n                                        xs={12}\r\n                                        sm={6}\r\n                                        md={4}\r\n                                        lg={3}\r\n                                    >\r\n                                        <Link\r\n                                            to={`/upload-game/${list.poolAddress}`}\r\n                                        >\r\n                                            <div className=\"mygame-list-image-item\">\r\n                                                <img\r\n                                                    src={list.game_img_src}\r\n                                                    alt={list.game_img_src}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"mygame-list-item-back\"></div>\r\n                                            <div className=\"mygame-list-item-hover\">\r\n                                                <div className=\"mygame-list-item-title\">\r\n                                                    {list.name}\r\n                                                </div>\r\n                                                <div className=\"mygame-list-item-btns\">\r\n                                                    <div className=\"mygame-list-item-btn\">\r\n                                                        <i className=\"fa fa-eye\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                ))\r\n                        ) : (\r\n                            <div\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"white text-center\"\r\n                            >\r\n                                No Games\r\n                            </div>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n            {/* <Partner /> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Partner from \"../../components/partner\";\r\nimport \"./farm.css\";\r\n\r\nexport default function Farm() {\r\n    const [gameItems, setGameItems] = useState([]);\r\n    const [viewstyle, setViewStyle] = useState({ display: \"none\" });\r\n    const [totalPoolBalance, setTotalPoolBalance] = useState(0);\r\n\r\n    const games = useSelector((states) => states.gamelist);\r\n\r\n    useEffect(() => {\r\n        var gamelist = games.gamelist;\r\n        setGameItems(gamelist);\r\n        var bump = 0;\r\n        for (var i = 0; i < gamelist.length; i++) {\r\n            bump += gamelist[i].poolBalance;\r\n        }\r\n        setTotalPoolBalance(bump);\r\n    }, [games.gamelist]);\r\n\r\n    const allview = () => {\r\n        setViewStyle({ display: \"inline-block\", height: \"200px\" });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            data-aos=\"fade-up\"\r\n            data-aos-anchor-placement=\"top-center\"\r\n            data-aos-once={true}\r\n        >\r\n            <div className=\"farm\">\r\n                <div className=\"container\">\r\n                    <Grid container direction=\"row\" className=\"farm-main\">\r\n                        <Grid item xs={12} lg={4} className=\"farm-left-section\">\r\n                            <div className=\"text-uppercase h1 white\">\r\n                                ICICB Staking\r\n                            </div>\r\n                            <h1 className=\"color\">Pick the Game</h1>\r\n                            <p className=\"lead grey\">\r\n                                You can stake for each game and can receive more\r\n                                rewards\r\n                            </p>\r\n                            <div className=\"games-sec1-img\">\r\n                                <img\r\n                                    src=\"assets/jackpot_img.png\"\r\n                                    alt=\"jackpotimage\"\r\n                                    className=\"games-sec1-jack-img\"\r\n                                />\r\n                                <img\r\n                                    src=\"assets/jackpot_back_img.png\"\r\n                                    alt=\"jackpotbackimage\"\r\n                                    className=\"games-sec1-img-back noselect\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"games-sec1-content\">\r\n                                <div className=\"games-sec1-content-title2\">\r\n                                    Total Stake\r\n                                </div>\r\n                                <div className=\"spacer-single\"></div>\r\n                                <div className=\"games-sec1-content-title1 upper\">\r\n                                    {Number(totalPoolBalance).toFixed(0)} ICICB\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"games-sec1-show-block\">\r\n                                <div\r\n                                    className=\"games-sec1-show-btn\"\r\n                                    onClick={allview}\r\n                                >\r\n                                    All games\r\n                                    <i className=\"fa fa-arrow-right\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"spacer-single\"></div>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            lg={8}\r\n                            container\r\n                            direction=\"row\"\r\n                            className=\"submit-games\"\r\n                            style={{ padding: \"0\" }}\r\n                        >\r\n                            <Grid container spacing={2}>\r\n                                {gameItems.filter((glist) => {\r\n                                    return glist.approve_flag === true;\r\n                                }).length > 0 ? (\r\n                                    gameItems\r\n                                        .filter((glist) => {\r\n                                            return glist.approve_flag === true;\r\n                                        })\r\n                                        .map((list, index) => {\r\n                                            return index < 12 ? (\r\n                                                <Grid\r\n                                                    item\r\n                                                    key={index}\r\n                                                    xs={12}\r\n                                                    sm={6}\r\n                                                    md={4}\r\n                                                    lg={3}\r\n                                                    style={{ height: \"200px\" }}\r\n                                                >\r\n                                                    <Link\r\n                                                        to={`/farming/${list.poolAddress}`}\r\n                                                    >\r\n                                                        <div className=\"mygame-list-image-item\">\r\n                                                            <img\r\n                                                                src={\r\n                                                                    list.game_img_src\r\n                                                                }\r\n                                                                alt=\"\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </Grid>\r\n                                            ) : (\r\n                                                <Grid\r\n                                                    item\r\n                                                    key={index}\r\n                                                    xs={12}\r\n                                                    sm={6}\r\n                                                    md={4}\r\n                                                    lg={3}\r\n                                                    style={viewstyle}\r\n                                                >\r\n                                                    <Link\r\n                                                        to={`/farming/${list.poolAddress}`}\r\n                                                    >\r\n                                                        <div className=\"mygame-list-image-item\">\r\n                                                            <img\r\n                                                                src={\r\n                                                                    list.game_img_src\r\n                                                                }\r\n                                                                alt=\"\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </Grid>\r\n                                            );\r\n                                        })\r\n                                ) : (\r\n                                    <div\r\n                                        style={{ width: \"100%\" }}\r\n                                        className=\"white text-center\"\r\n                                    >\r\n                                        No Games\r\n                                    </div>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n\r\n                {/* <Partner /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Tab, Tabs, Grid } from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\r\n\r\nimport { useBlockchainContext } from \"../../../blockchainContexts\";\r\nimport Action from \"../../../Service/action\";\r\n\r\nconst AntTabs = withStyles({\r\n    root: {\r\n        borderBottom: \"2px solid rgb(60, 63, 66)\",\r\n    },\r\n    indicator: {\r\n        height: \"2px\",\r\n        backgroundColor: \"var(--block_clr)\",\r\n    },\r\n    flexContainer: {\r\n        justifyContent: \"center\",\r\n    },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles({\r\n    root: {\r\n        textTransform: \"none\",\r\n        minWidth: \"50px\",\r\n        color: \"white\",\r\n        fontSize: \"15px !important\",\r\n        \"&:focus\": {\r\n            color: \"var(--block_clr)!important\",\r\n        },\r\n        \"&:hover\": {\r\n            color: \"var(--block_clr)!important\",\r\n        },\r\n    },\r\n    selected: {\r\n        color: \"var(--block_clr)!important\",\r\n    },\r\n})((props) => <Tab disableRipple {...props} />);\r\n\r\nconst GameInfoList = (props) => {\r\n    const { title, info } = props;\r\n    return (\r\n        <div className=\"gamesub-content-block-item\">\r\n            <span className=\"gamesub-content-block-item-one\">{title}</span>\r\n            <span className=\"gamesub-content-block-item-sec\">{info}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function EditFarm() {\r\n    const navigate = useNavigate();\r\n    const wallet = useWallet();\r\n    const routerParams = useParams();\r\n    const [state, { stake, unStake, getStakingPoolInfo }] =\r\n        useBlockchainContext();\r\n    const [poolAddress, setPoolAddress] = useState(\"\");\r\n    const [imageurl, setImageurl] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [stakeFlag, setStakFlag] = useState([0, false]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const auth = useSelector((states) => states.auth);\r\n    const games = useSelector((states) => states.gamelist);\r\n\r\n    useEffect(() => {\r\n        if (!auth.isAuthenticated || wallet.status !== \"connected\") {\r\n            navigate(\"/\");\r\n            NotificationManager.error(\"Please Log In\", \"\", 3000);\r\n            Action.logout();\r\n        } else {\r\n            games.gamelist\r\n                .filter((glist) => {\r\n                    return glist.poolAddress === routerParams.poolAddress;\r\n                }) // eslint-disable-next-line\r\n                .map((list) => {\r\n                    setPoolAddress(list.poolAddress);\r\n                    setName(list.name);\r\n                    setImageurl(list.game_img_src);\r\n                });\r\n        }\r\n    }, [auth]);\r\n\r\n    useEffect(() => {\r\n        if (poolAddress) getStakingPoolInfo(poolAddress);\r\n    }, [poolAddress]);\r\n\r\n    const handleStake = async () => {\r\n        try {\r\n            if (amount <= 0) {\r\n                NotificationManager.error(\"Please Input Amount.\", \"\", 2000);\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            await stake(amount, poolAddress);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleUnStake = async () => {\r\n        try {\r\n            if (amount <= 0) {\r\n                NotificationManager.error(\"Please Input Amount.\", \"\", 2000);\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            await unStake(amount, poolAddress);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const changeFlag = (event, newValue) => {\r\n        if (newValue === 0) {\r\n            setStakFlag([newValue, false]);\r\n        } else {\r\n            setStakFlag([newValue, true]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            data-aos=\"fade-down\"\r\n            data-aos-anchor-placement=\"top-center\"\r\n            data-aos-once={true}\r\n        >\r\n            <div className=\"gameFarm\">\r\n                <div className=\"gameSubmit-title\">\r\n                    <span className=\"page-move\">\r\n                        <Link to=\"/farm\">\r\n                            <i className=\"fa fa-mail-reply\" />\r\n                        </Link>\r\n                    </span>\r\n                    Staking Game\r\n                </div>\r\n                <div className=\"gamesubmit-card-block\">\r\n                    <Grid container className=\"gameSubmit-main\">\r\n                        <Grid\r\n                            item\r\n                            md={5}\r\n                            xs={12}\r\n                            className=\"gamesub-upload-block\"\r\n                        >\r\n                            <div style={{ width: \"100%\" }}>\r\n                                <div className=\"gamesub-upload-preview\">\r\n                                    <img\r\n                                        className=\"submitIMG\"\r\n                                        alt=\"Avatar\"\r\n                                        src={imageurl}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <div className=\"gamesub-content-block\">\r\n                            <div className=\"game-info\">\r\n                                <GameInfoList\r\n                                    title=\"Game Address\"\r\n                                    info={\r\n                                        poolAddress\r\n                                            ? poolAddress.slice(0, 5) +\r\n                                              \"...\" +\r\n                                              poolAddress.slice(-5)\r\n                                            : \"\"\r\n                                    }\r\n                                />\r\n                                <GameInfoList title=\"Name\" info={name} />\r\n                                <GameInfoList\r\n                                    title=\"Your Staking Amount\"\r\n                                    info={\r\n                                        !state[poolAddress]\r\n                                            ? \"0 ICICB\"\r\n                                            : state[poolAddress].stakingAmount +\r\n                                              \" \" +\r\n                                              state[poolAddress].symbol\r\n                                    }\r\n                                />\r\n                                <GameInfoList\r\n                                    title=\"Total Stake\"\r\n                                    info={\r\n                                        !state[poolAddress]\r\n                                            ? \"0 ICICB\"\r\n                                            : state[poolAddress].total +\r\n                                              \" \" +\r\n                                              state[poolAddress].symbol\r\n                                    }\r\n                                />\r\n                                <GameInfoList\r\n                                    title=\"PoolBalance\"\r\n                                    info={\r\n                                        !state[poolAddress]\r\n                                            ? \"0 ICICB\"\r\n                                            : Number(\r\n                                                  state[poolAddress].poolBalance\r\n                                              ).toFixed(0) + \" ICICB\"\r\n                                    }\r\n                                />\r\n                                <GameInfoList\r\n                                    title=\"My Balance\"\r\n                                    info={\r\n                                        Number(state.balance).toFixed(0) +\r\n                                        \" ICICB\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"gamesub-content-block-item\">\r\n                                <AntTabs\r\n                                    value={stakeFlag[0]}\r\n                                    onChange={changeFlag}\r\n                                    aria-label=\"signpageTab\"\r\n                                >\r\n                                    <AntTab label=\"Staking\" />\r\n                                    <AntTab label=\"Withdraw\" />\r\n                                </AntTabs>\r\n                                <br />\r\n                                <input\r\n                                    className=\"gamesub-content-block-input\"\r\n                                    style={{\r\n                                        width: \"97%\",\r\n                                        textAlign: \"right\",\r\n                                    }}\r\n                                    type=\"number\"\r\n                                    placeholder=\"Enter the amount\"\r\n                                    value={amount}\r\n                                    onChange={(e) => {\r\n                                        setAmount(e.target.value);\r\n                                    }}\r\n                                />\r\n                                {!stakeFlag[1] ? (\r\n                                    <div className=\"myinfo-content-item\">\r\n                                        {loading ? (\r\n                                            <div className=\"myinfo-content-btn text-center\">\r\n                                                <img\r\n                                                    src=\"../assets/box.gif\"\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div\r\n                                                className=\"myinfo-content-btn text-center\"\r\n                                                onClick={handleStake}\r\n                                            >\r\n                                                Staking\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"myinfo-content-item\">\r\n                                        {loading ? (\r\n                                            <div className=\"myinfo-content-btn text-center\">\r\n                                                <img\r\n                                                    src=\"../assets/box.gif\"\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div\r\n                                                className=\"myinfo-content-btn text-center\"\r\n                                                onClick={handleUnStake}\r\n                                            >\r\n                                                Withdraw\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { createRef, useState, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport reactImageSize from \"react-image-size\";\r\n\r\nimport { useBlockchainContext } from \"../../../blockchainContexts\";\r\nimport Action from \"../../../Service/action\";\r\nimport \"./gamesubmit.css\";\r\n\r\nexport default function GameSubmit(props) {\r\n    const wallet = useWallet();\r\n    const [state, { submitNewGame }] = useBlockchainContext();\r\n\r\n    const [image, _setImage] = useState(null);\r\n    const [selectedFile, setSeletedFile] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [frontendurl, setFrontendurl] = useState(\"\");\r\n    const [backendurl, setBackendurl] = useState(\"\");\r\n    const [imgSelectStatus, setImgSelectStatus] = useState(true);\r\n    const [loadingbtn, setLoadingbtn] = useState(false);\r\n    const [loadingState, setLoadingState] = useState(\"\");\r\n\r\n    const nameInput = useRef(null);\r\n    const descriptionInput = useRef(null);\r\n    const frontendurlInput = useRef(null);\r\n    const backendurlInput = useRef(null);\r\n    const inputFileRef = createRef(null);\r\n\r\n    const user = useSelector((state) => state.auth);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!user.isAuthenticated || wallet.status !== \"connected\") {\r\n            navigate(\"/\");\r\n            NotificationManager.error(\"Please Log In\", \"\", 3000);\r\n            Action.logout();\r\n        }\r\n    }, [user.isAuthenticated]);\r\n\r\n    const cleanup = () => {\r\n        URL.revokeObjectURL(image);\r\n    };\r\n\r\n    const setImage = (newImage) => {\r\n        if (image) {\r\n            cleanup();\r\n        }\r\n        _setImage(newImage);\r\n    };\r\n\r\n    const onSubmit = async () => {\r\n        if (name.trim() === \"\") {\r\n            nameInput.current.focus();\r\n        } else if (description.trim() === \"\") {\r\n            descriptionInput.current.focus();\r\n        } else if (frontendurl.trim() === \"\") {\r\n            frontendurlInput.current.focus();\r\n        } else if (backendurl.trim() === \"\") {\r\n            backendurlInput.current.focus();\r\n        } else if (selectedFile === null) {\r\n            setImgSelectStatus(false);\r\n        } else {\r\n            try {\r\n                setLoadingbtn(true);\r\n\r\n                setLoadingState(\"contract deploy...\");\r\n\r\n                var gameData = {\r\n                    gameOwner: user.user.account,\r\n                    feeRate: \"20000\",\r\n                    gameName: name.trim(),\r\n                };\r\n\r\n                var poolAddress = await submitNewGame(gameData);\r\n                const formData = new FormData();\r\n                formData.append(\"uploadfile\", selectedFile);\r\n                formData.append(\"name\", name.trim());\r\n                formData.append(\"description\", description.trim());\r\n                formData.append(\"frontendurl\", frontendurl.trim());\r\n                formData.append(\"backendurl\", backendurl.trim());\r\n                formData.append(\"poolAddress\", poolAddress);\r\n\r\n                setLoadingState(\"submit game...\");\r\n                await Action.uploadDataSave(formData);\r\n\r\n                setLoadingState(\"Success...\");\r\n                NotificationManager.success(\"Upload success!\", \"\", 3000);\r\n\r\n                setName(\"\");\r\n                setDescription(\"\");\r\n                setFrontendurl(\"\");\r\n                setBackendurl(\"\");\r\n                _setImage(\"\");\r\n                setSeletedFile(\"\");\r\n                cleanup();\r\n                setLoadingbtn(false);\r\n            } catch (err) {\r\n                NotificationManager.error(\"Submit Error\", \"\", 3000);\r\n                setLoadingbtn(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOnChange = async (event) => {\r\n        const newImage = event.target?.files?.[0];\r\n        const rejectTimeout = 5000;\r\n\r\n        if (newImage) {\r\n            try {\r\n                const { width, height } = await reactImageSize(\r\n                    URL.createObjectURL(newImage),\r\n                    rejectTimeout\r\n                );\r\n\r\n                if (height !== 338 || width !== 600) {\r\n                    NotificationManager.error(\"Image Size Invalid\", \"\", 3000);\r\n                    return;\r\n                }\r\n                setImage(URL.createObjectURL(newImage));\r\n                setSeletedFile(newImage);\r\n                setImgSelectStatus(true);\r\n            } catch (err) {\r\n                NotificationManager.error(\"Image Loading Error\", \"\", 3000);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleClick = (event) => {\r\n        if (image) {\r\n            event.preventDefault();\r\n            setImage(null);\r\n            setSeletedFile(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            data-aos=\"fade-down\"\r\n            data-aos-anchor-placement=\"top-center\"\r\n            data-aos-once={true}\r\n        >\r\n            <div className=\"gameSubmit\">\r\n                <div className=\"gameSubmit-title\">\r\n                    <span className=\"page-move\">\r\n                        <Link to=\"/mypage\">\r\n                            <i className=\"fa fa-mail-reply\" />\r\n                        </Link>\r\n                    </span>\r\n                    GameSubmit\r\n                </div>\r\n                <Grid container direction=\"row\" className=\"gameSubmit-main\">\r\n                    <Grid item md={5} xs={12} className=\"gamesub-upload-block\">\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <div\r\n                                className={\r\n                                    \"gamesub-upload-preview \" +\r\n                                    (image\r\n                                        ? \"\"\r\n                                        : \"borderblockclr \" +\r\n                                          (imgSelectStatus\r\n                                              ? \"\"\r\n                                              : \"bordererrclr \"))\r\n                                }\r\n                            >\r\n                                {image ? (\r\n                                    <img\r\n                                        className=\"submitIMG\"\r\n                                        alt=\"Avatar\"\r\n                                        src={image || \"assets/atari_mark.png\"}\r\n                                    />\r\n                                ) : (\r\n                                    <>\r\n                                        <i className=\"fa fa-cloud-upload\" />\r\n                                        No file chosen, yet!\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                            <input\r\n                                ref={inputFileRef}\r\n                                accept=\"image/*\"\r\n                                hidden\r\n                                id=\"game-coverimage-upload\"\r\n                                type=\"file\"\r\n                                onChange={handleOnChange}\r\n                            />\r\n                            <label\r\n                                htmlFor=\"game-coverimage-upload\"\r\n                                className=\"game-cover-btn-block\"\r\n                            >\r\n                                <div\r\n                                    className=\"game-cover-btn upper\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    {image ? (\r\n                                        <i className=\"fa fa-trash-o\" />\r\n                                    ) : (\r\n                                        <i className=\"fa fa-cloud-upload\" />\r\n                                    )}\r\n                                    {image ? \"Clear\" : \"Upload\"}\r\n                                </div>\r\n                            </label>\r\n                            <br />\r\n                            <br />\r\n                            <span style={{ color: \"var(--block_clr)\" }}>※</span>\r\n                            &nbsp;\r\n                            <label className=\"text-center white\">\r\n                                Please fix image size to{\" \"}\r\n                                <span style={{ color: \"var(--block_clr)\" }}>\r\n                                    600px\r\n                                </span>{\" \"}\r\n                                ×{\" \"}\r\n                                <span style={{ color: \"var(--block_clr)\" }}>\r\n                                    338px\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        md={6}\r\n                        xs={12}\r\n                        className=\"game-info gamesub-content-block\"\r\n                    >\r\n                        <div className=\"gamesub-content-block-item\">\r\n                            <span>\r\n                                Name{\" \"}\r\n                                <span style={{ color: \"var(--block_clr)\" }}>\r\n                                    *\r\n                                </span>\r\n                            </span>\r\n                            <input\r\n                                required\r\n                                ref={nameInput}\r\n                                className=\"gamesub-content-block-input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Game name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"gamesub-content-block-item\">\r\n                            <span>\r\n                                Description{\" \"}\r\n                                <span style={{ color: \"var(--block_clr)\" }}>\r\n                                    *\r\n                                </span>\r\n                            </span>\r\n                            <textarea\r\n                                required\r\n                                ref={descriptionInput}\r\n                                className=\"gamesub-content-block-input\"\r\n                                placeholder=\"Description\"\r\n                                rows={5}\r\n                                style={{ minHeight: \"150px\" }}\r\n                                value={description}\r\n                                onChange={(e) => {\r\n                                    setDescription(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"gamesub-content-block-item\">\r\n                            <span>\r\n                                Frontend URL\r\n                                <span style={{ color: \"var(--block_clr)\" }}>\r\n                                    *\r\n                                </span>\r\n                            </span>\r\n                            <input\r\n                                required\r\n                                ref={frontendurlInput}\r\n                                className=\"gamesub-content-block-input\"\r\n                                type=\"url\"\r\n                                placeholder=\"Frontend URL\"\r\n                                value={frontendurl}\r\n                                onChange={(e) => setFrontendurl(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"gamesub-content-block-item\">\r\n                            <span>\r\n                                Backend URL\r\n                                <span style={{ color: \"var(--block_clr)\" }}>\r\n                                    *\r\n                                </span>\r\n                            </span>\r\n                            <input\r\n                                required\r\n                                ref={backendurlInput}\r\n                                className=\"gamesub-content-block-input\"\r\n                                type=\"url\"\r\n                                placeholder=\"Backend URL\"\r\n                                value={backendurl}\r\n                                onChange={(e) => setBackendurl(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"gamesub-content-block-item\">\r\n                            {loadingbtn ? (\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"gamesub-content-submit-btn upper\"\r\n                                >\r\n                                    <span>{loadingState}</span>\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"gamesub-content-submit-btn upper\"\r\n                                    onClick={() => onSubmit()}\r\n                                >\r\n                                    Submit\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid, Dialog } from \"@mui/material\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { useWallet } from \"use-wallet\";\r\n\r\nimport Action from \"../../../Service/action\";\r\nimport \"./gamesubmit.css\";\r\n\r\nconst GameInfoList = (props) => {\r\n    const { title, info } = props;\r\n    return (\r\n        <div className=\"gamesub-content-block-item\">\r\n            <span className=\"gamesub-content-block-item-one\">{title}</span>\r\n            <span className=\"gamesub-content-block-item-sec\">{info}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst GameInfoListInput = (props) => {\r\n    const { title, info, setInfo } = props;\r\n    return (\r\n        <div className=\"gamesub-content-block-item\">\r\n            <span className=\"gamesub-content-block-item-one\">{title}</span>\r\n            <input\r\n                type=\"text\"\r\n                className=\"gamesub-content-block-input\"\r\n                value={info}\r\n                onChange={setInfo}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function EditGame() {\r\n    const navigate = useNavigate();\r\n    const wallet = useWallet();\r\n    const routerParams = useParams();\r\n\r\n    const [poolAddress, setPoolAddress] = useState(\"\");\r\n    const [gameImageUrl, setImageurl] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [frontendurl, setFrontendurl] = useState(\"\");\r\n    const [backendurl, setBackendurl] = useState(\"\");\r\n    const [gameKey, setGameKey] = useState(\"\");\r\n    const [isDocuModalShow, setDocuModalShow] = useState(false);\r\n    const [state, setState] = useState({ copied: false });\r\n\r\n    const auth = useSelector((states) => states.auth);\r\n    const games = useSelector((states) => states.gamelist);\r\n\r\n    const handlemodalclose = () => {\r\n        setDocuModalShow(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!auth.isAuthenticated || wallet.status !== \"connected\") {\r\n            navigate(\"/\");\r\n            NotificationManager.error(\"Please Log In\", \"\", 3000);\r\n            Action.logout();\r\n        } else {\r\n            games.gamelist\r\n                .filter((glist) => {\r\n                    return glist.poolAddress === routerParams.poolAddress;\r\n                }) // eslint-disable-next-line\r\n                .map((list) => {\r\n                    setPoolAddress(list.poolAddress);\r\n                    setName(list.name);\r\n                    setDescription(list.description);\r\n                    setFrontendurl(list.frontendurl);\r\n                    setBackendurl(list.backendurl);\r\n                    setImageurl(list.game_img_src);\r\n                });\r\n        }\r\n    }, [auth]);\r\n\r\n    const handleUpdate = async () => {\r\n        var updateData = {\r\n            poolAddress,\r\n            gameImageUrl,\r\n            description,\r\n            frontendurl,\r\n            backendurl,\r\n        };\r\n        Action.updateGame(updateData);\r\n    };\r\n\r\n    const handleGetKey = async () => {\r\n        try {\r\n            var updateData = {\r\n                poolAddress,\r\n            };\r\n            let key = await Action.updateGameKey(updateData);\r\n            if (key) {\r\n                setGameKey(key);\r\n            }\r\n\r\n            setDocuModalShow(true);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            data-aos=\"fade-up\"\r\n            data-aos-anchor-placement=\"top-center\"\r\n            data-aos-once={true}\r\n        >\r\n            <div className=\"gameSubmit\">\r\n                <div className=\"gameSubmit-title\">\r\n                    <span className=\"page-move\">\r\n                        <Link to=\"/mypage\">\r\n                            <i className=\"fa fa-mail-reply\" />\r\n                        </Link>\r\n                    </span>\r\n                    View Game\r\n                </div>\r\n                <div className=\"gamesubmit-card-block\">\r\n                    <Grid container className=\"gameSubmit-main\">\r\n                        <Grid\r\n                            item\r\n                            md={5}\r\n                            xs={12}\r\n                            className=\"gamesub-upload-block\"\r\n                        >\r\n                            <div style={{ width: \"100%\" }}>\r\n                                <div className=\"gamesub-upload-preview\">\r\n                                    <img\r\n                                        className=\"submitIMG\"\r\n                                        alt=\"Avatar\"\r\n                                        src={gameImageUrl}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                            className=\"game-info gamesub-content-block\"\r\n                        >\r\n                            <GameInfoList title=\"Name\" info={name} />\r\n                            <GameInfoList\r\n                                title=\"PoolAddress\"\r\n                                info={\r\n                                    !poolAddress\r\n                                        ? \"\"\r\n                                        : poolAddress.slice(0, 5) +\r\n                                          \"...\" +\r\n                                          poolAddress.slice(-5)\r\n                                }\r\n                            />\r\n                            <GameInfoListInput\r\n                                title=\"Description\"\r\n                                info={description}\r\n                                setInfo={(e) => {\r\n                                    setDescription(e.target.value);\r\n                                }}\r\n                            />\r\n                            <GameInfoListInput\r\n                                title=\"Frontend URL\"\r\n                                info={frontendurl}\r\n                                setInfo={(e) => {\r\n                                    setFrontendurl(e.target.value);\r\n                                }}\r\n                            />\r\n                            <GameInfoListInput\r\n                                title=\"Backend URL\"\r\n                                info={backendurl}\r\n                                setInfo={(e) => {\r\n                                    setBackendurl(e.target.value);\r\n                                }}\r\n                            />\r\n                            <Grid\r\n                                container\r\n                                justifyContent=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid item md={5} lg={5}>\r\n                                    <button\r\n                                        className=\"game-cover-btn upper\"\r\n                                        onClick={handleUpdate}\r\n                                    >\r\n                                        Update\r\n                                    </button>\r\n                                </Grid>\r\n                                <Grid item md={7} lg={7}>\r\n                                    <button\r\n                                        className=\"game-cover-btn upper\"\r\n                                        onClick={handleGetKey}\r\n                                    >\r\n                                        Game Key\r\n                                    </button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={isDocuModalShow}\r\n                keepMounted\r\n                onClose={handlemodalclose}\r\n            >\r\n                <div className=\"apikey-modal-card\">\r\n                    <div className=\"docu-title\">Access Key for Game</div>\r\n                    <br />\r\n                    <CopyToClipboard\r\n                        text={gameKey}\r\n                        onCopy={() => {\r\n                            setState({ copied: true });\r\n                            NotificationManager.success(\"copied\");\r\n                        }}\r\n                    >\r\n                        <div className=\"noselect\">\r\n                            Game Key: <span className=\"api_key\">{gameKey}</span>\r\n                        </div>\r\n                    </CopyToClipboard>\r\n                    <br />\r\n                    <div>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;ICICB CASINO's API allows users\r\n                        to do game inquiries tasks.\r\n                    </div>\r\n                    <div>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;Please keep your API key\r\n                        confidential to protect your game.\r\n                    </div>\r\n                    <div>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;For security reasons, you need\r\n                        to link your IP address with your API key.\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Container, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\nimport Fade from \"@mui/material/Fade\";\r\n\r\nimport Partner from \"../../components/partner\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n    heading: {\r\n        fontSize: \"18px\",\r\n        flexBasis: \"33.33%\",\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: \"16px\",\r\n        color: \"white\",\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 150,\r\n    },\r\n    img: {\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\",\r\n    },\r\n    modal: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        \"& img\": {\r\n            width: \"700px\",\r\n            height: \"500px\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst HowItem = (props) => {\r\n    const { index, imgURL, title, content, classes, expanded, handleChange } =\r\n        props;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Accordion\r\n                expanded={expanded === \"panel\" + index}\r\n                onChange={handleChange(\"panel\" + index)}\r\n            >\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls={\"panel\" + index + \"bh-content\"}\r\n                    id={\"panel\" + index + \"bh-header\"}\r\n                >\r\n                    <Typography className={classes.heading}>{title}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>\r\n                        <Grid container spacing={2}>\r\n                            {imgURL !== undefined ? (\r\n                                <Grid item>\r\n                                    <ButtonBase\r\n                                        className={classes.image}\r\n                                        onClick={handleOpen}\r\n                                    >\r\n                                        <img\r\n                                            className={classes.img}\r\n                                            src={imgURL}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </ButtonBase>\r\n                                </Grid>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                            <Grid item xs={12} sm container>\r\n                                <Grid item xs container direction=\"column\">\r\n                                    <Grid item xs>\r\n                                        <br />\r\n                                        <Typography\r\n                                            className={classes.secondaryHeading}\r\n                                            variant=\"body2\"\r\n                                            gutterBottom\r\n                                        >\r\n                                            {content}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Modal\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Fade in={open}>\r\n                    <img className={classes.img} src={imgURL} alt=\"\" />\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default function Howto() {\r\n    const data = [\r\n        {\r\n            title: \"Requirements\",\r\n            content:\r\n                \"- Metamask browser extension \\n- ICICB Token ready to play \\n- Enthusiasm and desire to win!\",\r\n        },\r\n        {\r\n            title: \"1. How can you sign up to the platform?\",\r\n            content: `- First, you will need to click on the upper right corner where the Sign Up button is located. \\n- Then, you will select a username to go by and an email. \\n- Later on, the metamask tool will popup and ask for permission to sign the smart contract that allow you to interact with the casino \\n- After everything is set, you can now log in!`,\r\n            imgURL: \"assets/documentation/1.png\",\r\n        },\r\n        {\r\n            title: \"2. How do you log in into the platform?\",\r\n            content:\r\n                \"- First, you will need to locate in the upper right corner the Log In button available. \\n- Then, it will show you the possibility to Sign In, which will give a metamask pop up. \\n- As soon as the metamask popup appears, you will need to sign it to gain access to the casino. \\n- And finally you will be able to deposit ICICB Tokens into the platform to play, to stay or even upload new game ideas!\",\r\n            imgURL: \"assets/documentation/2.png\",\r\n        },\r\n        {\r\n            title: \"3. How to deposit ICICB Token to platform\",\r\n            content:\r\n                \"- After being logged in, you have to go to My Page tab. \\n- It will show your wallet’s information, the deposit section and the withdrawal section. \\n- Now you can input the desired amount of ICICB Token in the“Deposit Amount” box. \\n- Then, a metamask pop up will appear to approve the token and later on the transaction amount. \\n- After confirming both metamask authorizations, your tokens should appear shortly after in your ICICB Casino account.\",\r\n            imgURL: \"assets/documentation/3.png\",\r\n        },\r\n        {\r\n            title: \"4. How to withdraw from platform?\",\r\n            content:\r\n                \"- After being logged in, you have to go to My Page tab. \\n- It will show your wallet’s information, the deposit section and the withdrawal section. \\n- Now you can input the desired amount of ICICB Token in the “Withdraw Amount” box. \\n- Then, a metamask transaction will need approval to move the tokens. - After it’s confirmed, you will have available shortly after your ICICB Token in your wallet!\",\r\n            imgURL: \"assets/documentation/4.png\",\r\n        },\r\n        {\r\n            title: \"5. How do I play different games?\",\r\n            content:\r\n                \"- After being logged in, you will beable to check the multiple gamesavailable in the platform.\\n- As soon as you click one of thegames a ICICB casino pop up willappear asking the amount youwould like to play with, consideringthe minimum allowance amount. \\n- After agreeing with the amount, ametamask pop up will ask you tosign the following. \\n- Finally, the game will be availableto be played with the wager youwant to add on each round,considering the total amountselected before.\",\r\n            imgURL: \"assets/documentation/5.png\",\r\n        },\r\n        {\r\n            title: \"6. How do I stake ICICB Token into a game pool?\",\r\n            content:\r\n                \"- First, you will have to go to the “Farming” section. \\n- Once you are there, you will need to select the game in which you want to stake your tokens for profits. \\n- According to your ICICB Token balance in your metamask wallet (not balance inside the ICICB Casino Amount), you will be able to stake the amount desired by inserting it in the “Stake” box. \\n- Once it’s confirmed, a metamask pop up will require you to approve the token and later on the transaction. \\n- Once both confirmations are completed, you will have ICICB Token balance, the token that will represent your staked portion inside the game pool.\",\r\n            imgURL: \"assets/documentation/6.png\",\r\n        },\r\n        {\r\n            title: \"7. How to withdraw from staking pool?\",\r\n            content:\r\n                \"- First, you will have to go to the “Farming” section. \\n- Once you are there, you will need to select the game in which you have staked tokens. \\n- Check your ICICB Token balance and write down in the “Withdraw” box the amount you want to unstake. \\n- Confirm the transaction within metamask. \\n- Once the transaction is confirmed you will see your ICICB Token balance updated in your wallet and the reduction of ICICB Token in the staking page.\",\r\n        },\r\n        {\r\n            title: \"8. How to make profit with staking?\",\r\n            content:\r\n                \"The staking pool balance will work as the “House” in the casino, giving a proportional ownership to everyone that is staked into a game. \\nThis allows the stakers to receive profits from the winning that the casino give in the game they decided to enter. \\nExample: \\nYou want to stake 1000 ICICB Token into the BlackJack staking pool. \\nThe staking pool already has 9000 ICICB Token in it (ICICB Token is the staked version of ICICB Token). \\nOnce you are done depositing your 1000 ICICB Token, they will become 1000 ICICB Token, giving a total balance of the BlackJack staking pool of 10,000 ICICB Token. \\nThat means you have 10% of the staked tokens. \\nIf no one deposits any more tokens and people begin playing BlackJack, the most likely situation is that the staking pool will increase due to the proportional losses people will have by playing the game. \\nAfter a month of games the staking pool increased to 15,000 ICICB Token. \\nThat means you still hold 10% from it, considering the previous supposition. \\nNow your new balance by the end of the month will be 1,500 ICICB Token,giving you a 50% increase on your staked tokens compared to the initial staked amount.\",\r\n        },\r\n        {\r\n            title: \"9. Are there any risk for stakers?\",\r\n            content:\r\n                \"Yes, as the staking pool amount can increase, it could also decrease, giving the possibility that all the tokens in the staking pool could be lost. Nonetheless, casinos have proven along the way that, at the end, the house always wins. \\n\\nIt’s important to consider that by staking you are becoming partially the owner of that casino game, giving you the benefits and the risks that this action includes.\",\r\n        },\r\n    ];\r\n    const data1 = [\r\n        {\r\n            title: \"1. Are there any fees for stakers?\",\r\n            content:\r\n                \"Yes. All the profits that are produced by the games staking pool are completely distributed to the stakers. Reason why a staking fee is applied at the moment you stake your tokens. The total staking fee is 2%, which is divided in the following way: \\n- A 1% for the platform maintenance.\\n- A 1% for the game creator.\",\r\n        },\r\n        {\r\n            title: \"2. Are there any fees for players?\",\r\n            content: \"Yes, you are free to submit your games to the platform.\",\r\n        },\r\n    ];\r\n    const data2 = [\r\n        {\r\n            title: \"1. Can I submit my games to platform?\",\r\n            content: \"Yes, you are free to submit your games to the platform.\",\r\n        },\r\n        {\r\n            title: \"2. Are there any audit and approval process in add listed game?\",\r\n            content:\r\n                \"As soon as the games are submitted into the platform they will endure a thorough security audit to avoid any possible exploits that could benefit someone when playing. When the approval is given the game will pass testing sessions to create guides to help new players and will be published shortly after.\",\r\n        },\r\n        {\r\n            title: \"3. Is it free to submit games to the platform?\",\r\n            content:\r\n                \"Yes, the service is free. The only payment that will be required are the gas fees for the game deployment contract.\",\r\n        },\r\n    ];\r\n\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = useState(\"panel1\");\r\n    const [expanded1, setExpanded1] = useState(0);\r\n    const [expanded2, setExpanded2] = useState(0);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const handleChange1 = (panel) => (event, isExpanded) => {\r\n        setExpanded1(isExpanded ? panel : false);\r\n    };\r\n    const handleChange2 = (panel) => (event, isExpanded) => {\r\n        setExpanded2(isExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"howto\">\r\n            <div className=\"container\">\r\n                <div\r\n                    data-aos=\"fade-up\"\r\n                    data-aos-anchor-placement=\"top-center\"\r\n                    data-aos-once={true}\r\n                >\r\n                    <h1 className=\"howtotitle\">\r\n                        How to interact with the ICICB Casino Platform\r\n                    </h1>\r\n                    <div className={classes.root}>\r\n                        {data.map((e, index) => {\r\n                            return (\r\n                                <HowItem\r\n                                    key={index}\r\n                                    index={index + 1}\r\n                                    title={e.title}\r\n                                    content={e.content}\r\n                                    imgURL={e.imgURL}\r\n                                    expanded={expanded}\r\n                                    classes={classes}\r\n                                    handleChange={handleChange}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div\r\n                    data-aos=\"fade-right\"\r\n                    data-aos-anchor-placement=\"top-center\"\r\n                    data-aos-once={true}\r\n                >\r\n                    <h1 className=\"howtotitle\">Fees for platform</h1>\r\n                    <div className={classes.root}>\r\n                        {data1.map((e, index) => {\r\n                            return (\r\n                                <HowItem\r\n                                    key={index}\r\n                                    index={index + 1}\r\n                                    title={e.title}\r\n                                    content={e.content}\r\n                                    imgURL={e.imgURL}\r\n                                    expanded={expanded1}\r\n                                    classes={classes}\r\n                                    handleChange={handleChange1}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div\r\n                    data-aos=\"fade-left\"\r\n                    data-aos-anchor-placement=\"top-center\"\r\n                    data-aos-once={true}\r\n                >\r\n                    <h1 className=\"howtotitle\">\r\n                        Game submission to the platform\r\n                    </h1>\r\n                    <div className={classes.root}>\r\n                        {data2.map((e, index) => {\r\n                            return (\r\n                                <HowItem\r\n                                    key={index}\r\n                                    index={index + 1}\r\n                                    title={e.title}\r\n                                    content={e.content}\r\n                                    imgURL={e.imgURL}\r\n                                    expanded={expanded2}\r\n                                    classes={classes}\r\n                                    handleChange={handleChange2}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Partner /> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport FullscreenIcon from \"@mui/icons-material/Fullscreen\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nimport Action from \"../../../Service/action\";\r\n\r\nexport default function IframeBlock() {\r\n    const wallet = useWallet();\r\n    const navigate = useNavigate();\r\n    const fullscreen = useFullScreenHandle();\r\n    const routerParams = useParams();\r\n\r\n    const user = useSelector((states) => states.auth);\r\n    const games = useSelector((states) => states.gamelist.gamelist);\r\n\r\n    const [frontUrl, setFrontUrl] = useState(\"\");\r\n    const [height, setHeight] = useState(85);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        games.map((list) => {\r\n            if (list.poolAddress === routerParams.poolAddress) {\r\n                setFrontUrl(list.frontendurl);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n            if (window.innerWidth < 900) {\r\n                navigate(\"/\");\r\n                NotificationManager.error(\"Please Check Resolution\", \"\", 3000);\r\n            }\r\n        };\r\n\r\n        setResponsiveness();\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!user.isAuthenticated || wallet.status !== \"connected\") {\r\n            navigate(\"/\");\r\n            NotificationManager.error(\"Please Log In\", \"\", 3000);\r\n            Action.logout();\r\n        }\r\n    }, [user.isAuthenticated]);\r\n\r\n    const reportChange = useCallback(\r\n        (state, handle) => {\r\n            if (state) setHeight(100);\r\n            else setHeight(85);\r\n        },\r\n        [fullscreen]\r\n    );\r\n\r\n    const handleClose = async () => {\r\n        navigate(\"/\");\r\n        setFrontUrl(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"MainIframe\">\r\n            <section className=\"jumpPanel\">\r\n                <CloseIcon className=\"classgame\" onClick={handleClose} />\r\n                &nbsp;&nbsp;\r\n                <FullscreenIcon\r\n                    className=\"fullscreen\"\r\n                    onClick={fullscreen.enter}\r\n                />\r\n                <FullScreen handle={fullscreen} onChange={reportChange}>\r\n                    <div\r\n                        className=\"gamePanel\"\r\n                        style={{ height: height + \"vh\" }}\r\n                    >\r\n                        {React.createElement(\"iframe\", {\r\n                            id: \"gameIframe\",\r\n                            src: frontUrl,\r\n                            title: \"Casino game host\",\r\n                        })}\r\n                    </div>\r\n                </FullScreen>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./pagenotfound.css\";\r\nimport \"./pagenotfound_responsive.css\";\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <div className=\"pagenotfound\">\r\n            <div className=\"page-img\">\r\n                <img src=\"./assets/404page.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"page-content\">\r\n                <h2>Oops! Page not found.</h2>\r\n                <h1>404</h1>\r\n                <p>We can't find the page you're looking for</p>\r\n                <Link to=\"/\" className=\"link-btn upper\">\r\n                    Go Back HOME\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React, { useEffect } from \"react\";\r\nimport { Navigate, useRoutes } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { init } from \"aos\";\r\n// layouts\r\nimport Sidebar from \"./components/menu/sidebar\";\r\nimport Home from \"./components/pages/home\";\r\nimport MyPage from \"./components/pages/myPage/MyPage\";\r\nimport Farm from \"./components/pages/farm/Farm\";\r\nimport FarmItem from \"./components/pages/farm/FarmItem\";\r\nimport GameSubmit from \"./components/pages/myPage/GameSubmit\";\r\nimport EditGame from \"./components/pages/myPage/EditGame\";\r\nimport HowTo from \"./components/pages/how/howto\";\r\nimport IframeBlock from \"./components/pages/IframeBlock/IframeBlock\";\r\nimport PageNotFound from \"./components/components/Error/PageNotFound\";\r\n\r\nimport Action from \"./Service/action\";\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Router() {\r\n    const wallet = useWallet();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // Check for token\r\n        if (localStorage.getItem(\"jwtToken\") && wallet.status === \"connected\") {\r\n            // Decode token and get user info and exp\r\n            const decoded = jwt_decode(localStorage.getItem(\"jwtToken\"));\r\n\r\n            // Set user and isAuthenticated\r\n            dispatch({\r\n                type: \"SET_CURRENT_USER\",\r\n                payload: decoded,\r\n            });\r\n\r\n            // Check for expired token\r\n            const currentTime = Date.now() / 1000;\r\n            if (decoded.exp < currentTime) {\r\n                // Logout user\r\n                Action.logout();\r\n\r\n                // Redirect to login\r\n                window.location.href = \"/\";\r\n            } else Action.updateUserData();\r\n        }\r\n    }, [wallet.status]);\r\n\r\n    useEffect(() => {\r\n        Action.getUserGamelist();\r\n        init();\r\n        setInterval(() => {\r\n            Action.updateUserData();\r\n        }, 5000);\r\n    }, []);\r\n\r\n    return useRoutes([\r\n        {\r\n            path: \"/\",\r\n            element: <Sidebar />,\r\n            children: [\r\n                { path: \"/\", element: <Home /> },\r\n                { path: \"mypage\", element: <MyPage /> },\r\n                { path: \"farm\", element: <Farm /> },\r\n                { path: \"farming/:poolAddress\", element: <FarmItem /> },\r\n                { path: \"upload-game\", element: <GameSubmit /> },\r\n                { path: \"upload-game/:poolAddress\", element: <EditGame /> },\r\n                { path: \"howto\", element: <HowTo /> },\r\n                { path: \"IframeBlock/:poolAddress\", element: <IframeBlock /> },\r\n                { path: \"404\", element: <PageNotFound /> },\r\n                { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n            ],\r\n        },\r\n        { path: \"*\", element: <Navigate to=\"/404\" replace /> },\r\n    ]);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nimport LoadingScreen from \"react-loading-screen\";\r\n\r\nimport BlockhainProvider from \"./blockchainContexts\";\r\nimport ScrollToTopBtn from \"./components/menu/scrollToTop\";\r\nimport Routes from \"./routes\";\r\n\r\nimport \"react-notifications/lib/notifications.css\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  :root {\r\n    scroll-behavior: unset;\r\n  }\r\n`;\r\n\r\nexport const ScrollTop = ({ children, location }) => {\r\n    React.useEffect(() => window.scrollTo(0, 0), [location]);\r\n    return children;\r\n};\r\n\r\nexport default function App() {\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 2000);\r\n    }, []);\r\n\r\n    return (\r\n        <LoadingScreen\r\n            loading={loading}\r\n            bgColor=\"var(--menu_backclr)\"\r\n            spinnerColor=\"white\"\r\n            logoSrc=\"assets/screenLogo.png\"\r\n        >\r\n            <BlockhainProvider>\r\n                <GlobalStyles />\r\n                <BrowserRouter>\r\n                    <Routes />\r\n                </BrowserRouter>\r\n                <ScrollToTopBtn />\r\n                <NotificationContainer />\r\n            </BlockhainProvider>\r\n        </LoadingScreen>\r\n    );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { UseWalletProvider } from \"use-wallet\";\nimport { Provider } from \"react-redux\";\nimport \"./assets/animated.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport \"../node_modules/elegant-icons/style.css\";\nimport \"../node_modules/et-line/style.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.js\";\nimport \"aos/dist/aos.css\";\nimport \"aos/dist/aos.js\";\nimport \"antd/dist/antd.dark.min.css\";\nimport \"./assets/style.scss\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <UseWalletProvider chainId={26} connectors={{ portis: { dAppId: \"SS\" } }}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </UseWalletProvider>,\n    document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n"],"sourceRoot":""}
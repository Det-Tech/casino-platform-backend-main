{"version":3,"sources":["../../src/index.ts"],"names":["chainIdToNetwork","FortmaticConnector","apiKey","chainId","Object","supportedChainIds","accounts","account","provider","fortmatic","m","Fortmatic","deactivate","AbstractConnector","emitUpdate","ConnectorEvent","emitError","emitDeactivate"],"mappings":"wLAIA,IAAMA,EAAkD,CACtD,EADsD,UAEtD,EAFsD,UAGtD,EAHsD,UAItD,GAAI,SAQOC,EAAb,Y,QAME,c,MAAcC,WAAQC,Y,OACVC,wBAAuCD,EAAjD,8BACA,cAAM,CAAEE,kBAAmB,OAA3B,MAEA,SACA,Y,IAXJ,G,EAAA,G,6EAAA,mD,wCAuB0B,yCAGd,mBAAgCC,EAAhC,OAHc,eAAhBC,GAKN,MAAO,CAAEC,SAAU,YAAZ,cAA0CL,QAAS,EAAnD,QAAiEI,e,EAbnE,K,iBAAA,EAAKE,U,uBACgB,0CAAyB,YAAC,4BAAIC,OAAJ,EAAIA,EAAC,SAAL,QAA1B,eAAlBC,GACN,YAAiB,MACf,EADe,OAEf,mBAAsB,eAAtB,EAAuDX,EAAiB,EAF1E,a,mDAjBN,iEAgCI,uBAAO,eAAP,eAhCJ,gEAoCI,uBAAO,KAAP,SApCJ,gEAwCI,uBAAO,wDAGC,mBAAgCM,EAAhC,OA3CZ,iDA8CSM,aA9CT,uB,MAiDU,K,uBAAA,4CACN,sBAlDJ,6C,6FAbsBC,EAAtB,Y,4BAGgBR,Q,MAAkD,MAAlDA,kB,6BAEZ,oB,oHALJ,WAcYS,Y,KAIR,KAAUC,IAAV,W,EAlBJ,UAqBYC,Y,KAIR,KAAUD,IAAV,U,EAzBJ,eA4BYE,W,KAIR,KAAUF,IAAV,a,EAhCJ","file":"static/js/16.e54157f2.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}
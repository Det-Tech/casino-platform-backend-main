{"version":3,"sources":["../../src/index.ts"],"names":["TorusConnector","chainId","initOptions","constructorOptions","loginOptions","supportedChainIds","accounts","account","provider","torus","m","Torus","method","AbstractConnector","emitUpdate","ConnectorEvent","emitError","emitDeactivate"],"mappings":"+PAUaA,EAAb,Y,QAQE,c,MAAcC,Y,IAASC,yBAAc,K,IAAIC,gCAAqB,K,IAAIC,0BAAe,K,OAC/E,cAAM,CAAEC,kBAAmB,OAA3B,MAEA,UACA,gBACA,uBACA,iB,IAdJ,G,EAAA,G,sEAAA,mD,MAkBS,K,oCAMiB,cAAiB,EAAjB,oBAAyC,mBAAgCC,EAAhC,OAAzC,eAAhBC,GAEN,MAAO,CAAEC,SAAU,QAAZ,SAAiCD,e,iBARnC,EAAKE,M,uBACY,iFAAsC,YAAC,4BAAIC,OAAJ,EAAIA,EAAC,SAAL,QAAvC,eAAdC,G,OACN,QAAa,MAAU,EAAvB,oB,gBACM,aAAgB,EAAhB,sC,mDArBZ,iEA8BI,uBAAO,WAAP,UA9BJ,gEAkCI,uBAAO,KAAP,SAlCJ,gEAsCI,uBAAO,4BAA4B,CAAEC,OAAQ,iBAAtC,MAA6D,mBAAgCN,EAAhC,OAtCxE,4D,0BAAA,uB,MA4CU,K,uBAAA,oCACN,eACA,sBA9CJ,uC,OAAA,I,6FAPsBO,EAAtB,Y,4BAGgBR,Q,MAAkD,MAAlDA,kB,6BAEZ,oB,oHALJ,WAcYS,Y,KAIR,KAAUC,IAAV,W,EAlBJ,UAqBYC,Y,KAIR,KAAUD,IAAV,U,EAzBJ,eA4BYE,W,KAIR,KAAUF,IAAV,a,EAhCJ","file":"static/js/19.f3edd0f9.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}